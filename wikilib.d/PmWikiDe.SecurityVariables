version=pmwiki-2.3.23 ordered=1 urlencoded=1
author=MFWolff
charset=UTF-8
csum=Add $AuthFormRespCode (+509)
ctime=1305199227
name=PmWikiDe.SecurityVariables
rev=27
targets=PmWikiDe.Passwords,PmWikiDe.SecurityVariables,PmWikiDe.AuthUser,PmWikiDe.PasswordsAdmin,PmWikiDe.Functions,PmWikiDe.AvailableActions,Cookbook.FailedLoginFunction,PmWikiDe.EditVariables,PmWikiDe.UploadVariables,PmWikiDe.Security,PmWikiDe.PagelistVariables
text=(:title Sicherheits-Variablen:)%0a(:Summary: Für die Sicherheit entscheidende Variablen:)%0a(:Original_Page: PmWiki.{$Name} :)%0a(:Translation_Date: 2011-05-11:)%0a(:Translation_Status: %25green%25fertig%25%25:)%0a(:Audience: Entwickler, Administratoren:)%0a%0a%0aDiese Seite deckt Variablen ab, die für die Sicherheit von PmWiki ausschlaggebend ist.%0a%0a:$AllowPassword: Diese Variable enthält das spezielle 'nopass'-Passwort. Das wurde früher benutzt, um Seiten und Gruppen vom Passwortschutz auszuschließen, sodass trotz Gruppenpasswort oder siteweitem Passwort jedermann mit ihnen arbeiten konnte. Jüngere PmWiki-Versionen benutzen dafür '@nopass' (siehe [[Passwords#pageattr|+]]). Wenn Ihr Wiki älter ist und/oder Seiten mit dem 'nopass'-Passwort enthält, sollten Sie diese Variable nicht ändern. Seit Version 2.2.92 kann man das 'nopass'-Passwort deaktivieren, indem man diese Variable auf den Wert @@false@@ (oder @@''@@) setzt.%0a%0a:$AuthUserPageFmt: definiert Seitennamen, in denen das Authuserskript nach Benutzernamen und Passwörtern sehen soll. Siehe  [[PmWikiDe/AuthUser#accountsfromotherpages]].%0a%0a:$DefaultPasswords: gibt die Standardpasswörter für Benutzer, Administator und Aktionen (Bearbeiten, Ansehen, Anhängen) an. Siehe [[PmWikiDe/PasswordsAdmin#settingsitewidepasswords|site-weite Passwörter]] setzen. %0a%0a:$DenyHtaccessContent: bestimmt den Standardinhalt für @@.htaccess@@-Dateien, die PmWiki in neuen Verzeichnissen unter ''wiki.d'' erzeugt. Der Apache-Server [[https://httpd.apache.org/docs/2.4/upgrading.html#run-time|hat diese Direktiven in Version 2.4 geändert]]. Der Standardwert sollte sowohl für ältere als auch neuere Serverversionen funktionieren.%0a%0a:$EnablePostAttrClearSession: Ein Schalter zur Kontrolle, ob oder ob nicht PmWiki durch die Änderung eines Seitenattributs irgendein existierendes Passwort vergessen soll. Der Standard ist, dass PmWiki durch die Änderung eines Attributes alle eingegebenen Passwörter vergisst. Das kann man ändern, indem man diese Variable auf null setzt.%0a%0a:$EnableSessionPasswords: kontrolliert, ob Passwörter als Teil einer Session gespeichert werden. Wenn die Variable auf NULL gesetzt ist, werden die Session-Passwörter niemals gespeichert (obwohl jede [[AuthUser]]-Authentifikation weiterhin erinnert wird).%0a%0a:$SetCookieFunction: Der Name einer eigenen Funktion zum Senden von Cookies zum Browser, anstelle von @@[[Functions#pmsetcookie|pmsetcookie()]]@@. Die Funktion sollte die gleichen Argumente wie @@pmsetcookie()@@ akzeptieren.%0a:%0a:$EnableCookieSecure: Auf 1 gesetzt aktiviert diese Variable das "[[https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie|Secure]]"-Flag für die Cookies des PmWiki-Kerns &ndash; die Cookies werden nur über HTTPS versendet. Das schließt die 'author'-, 'preference'- und 'cache'-Cookies des Kerns und alle benutzerdefinierten Cookies, die per @@pmsetcookie()@@ gesetzt wurden, ein.\\%0aBeachten Sie: Das Session-Cookie und alle anderen PmWiki-Cookies sind betroffen.%0a%0a:$EnableCookieHTTPOnly: Auf 1 gesetzt aktiviert diese Variable das "[[https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie|HttpOnly]]"-Flag für die Cookies des PmWiki-Kerns &ndash; die Cookies werden JavaScript nicht zugänglich gemacht. Das schließt die 'author'-, 'preference'- und 'cache'-Cookies des Kerns und alle benutzerdefinierten Cookies, die per @@pmsetcookie()@@ gesetzt wurden, ein.\\%0aBeachten Sie: Das Session-Cookie und alle anderen PmWiki-Cookies sind betroffen.%0a%0a:$CookieSameSite: Das "[[https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie|SameSite]]"[=-=]Flag für Cookies, das via @@pmsetcookie()@@ gesendet wird, ist auf 'Lax' voreingestellt. Siehe diesen [[https://techcommunity.microsoft.com/t5/iis-support-blog/samesite-lax-in-the-new-world/ba-p/1156292|Artikel]] über die Implikationen.%0a%0a:$SessionEncode: Funktion, die man benutzt, um sensible Informationen in Sitzungen (Sessions) zu kodieren. Man setzt die Funktion auf NULL, wenn man keinerlei Kodierung haben will (wird paarweise mit $SessionDecode genutzt, s. hierunter).%0a%0a:$SessionDecode: Funktion zum Rückgängigmachen der Kodierung, die durch $SessionEncode vorgegeben ist. Man setzt die Funktion auf NULL, wenn es keine kodierten sensible Werte in der Sitzung gibt.%0a%0a:$HandleAuth: Dies setzt die erforderliche Authentifizierungsebene, die nötig ist, um eine [[PmWikiDe/AvailableActions|Aktion]] auszuführen. Wenn Sie das folgende Beispiel in Ihre ''@@config.php@@''-Datei eintragen, müssen Sie Bearbeitenrechte haben, um die Versionen einer Seite (page history) sehen zu können:%0a-> $HandleAuth['diff'] = 'edit';%0a%0a:$PageAttributes: Setzt den String, der auf der Attribute-Seite angezeigt wird, wenn man ein Passwort für eine Aktion eingibt.%0a%0a:$AuthLDAPBindDN: Für Sites, die [[AuthUser]] mit LDAP-Authentifizierung benutzen, gibt dies den vorgegebenen Namen (DN) an, der benutzt wird zum Binden an den LDAP-Server, damit die Identitäten überprüft werden.%0a%25comment%25 Wer mehr davon versteht, der möge bitte diesen Satz prüfen und ggf. verbessern%25%25%0a%0a:$AuthLDAPBindPassword:Für [[AuthUser]] mit LDAP-Authentifikation legt dies das Passwort für das Binding fest (in Verbindung mit $AuthLDAPBindDN oben).%0a%0a:$AuthLDAPReferrals:Legt fest, ob automatisch den Verweisungen ('referrals') gefolgt wird, die der LDAP-Server zurückliefert, auf 1 setzen zum Aktivieren oder auf 0 zum Deaktivieren. In der Voreinstellung ist diese Variable nicht gesetzt und die Verbindung folgt 'referrals', wenn diese auf der Serverseite aktiviert sind (gewöhnlich sind sie das). %0a%0a:$MultiFactorAuthFunction: (nur [[AuthUser]]) Eine vom Benutzer/Administrator definierte Funktion, die einen Check für Multi-Faktor-Authentifizierung durchführt (MFA, 2FA). Sie wird von ''AuthUserId()'' aufgerufen, wenn die Authentifizierung erfolgreich war. Die Funktion wird mit dem Benutzernamen und dem Passwort als Argumente aufgerufen und sollte ''true'' zurückliefern, wenn die 2FA erfolgreich war, sonst ''false''.%0a%0a:$FailedLoginsFunction: (nur [[AuthUser]]) Eine vom Benutzer/Administrator definierte Funktion, die einen Check für vielfache erfolglose Logins durchführt, siehe Cookbook:FailedLoginFunction.%0a%0a:$EnablePublishAttr: Fügt eine neue  "publish"-Autorisierungsebene ein, um das Bearbeiten und Speichern von Entwürfen vom Veröffentlichen des Textes zu unterscheiden &ndash; siehe $EnableDrafts.%0a%0a:$EnablePageVarAuth: In PmWiki version 2.2.22 und 2.2.23 sollte diese Variable auf 0 gesetzt sein. In 2.2.24 wird sie nicht weiter benutzt.%0a%0a:$RobotActions: Ein Array, das kontrolliert, welche [[AvailableActions|Aktionen]] von Webbots erreicht werden können. Die Arrayschlüssel sind die Aktionen, wenn der Wert 1 oder true ist, ist die Aktion erreichbar. Wenn eine Aktion nicht als Schlüssel definiert ist oder wenn der Wert als false oder zero ausgewertet wird, wird die Aktion abgewiesen, wenn sie von einem Bot aufgerufen wird. Per Voreinstellung sind nur die Aktionen "browse", "rss" und "dc" von Bots erreichbar. Zum Beispiel:\\%0a@@$RobotActions['download'] = 1; @@ # '''erlaube''' Bots, Dateien mit deaktiviertem $EnableDirectDownload herunterzuladen (page permissions werden respektiert)\\%0a@@$RobotActions['rss'] = 0; @@ # '''entziehe''' Bots '''die Erlaubnis''', RSS-Feeds zu erhalten\\%0a@@$RobotActions['print'] = 1; @@ # erlaube Bots, die Druckversion zu erhalten\\%0aDie Variable kann auch von Kochbuchrezepten definierte Aktionen als Schlüssel enthalten.%0a%0a:$RobotPattern: Ein Muster eines regulären Ausdrucks mit bekannten user-agent-Zeichenketten für Bots.%0a%0a:$EnableRobotCloakActions: Wird dieses Flag auf 1 gesetzt, werden alle verbotenen ?action=Werte von Seitenverweisen entfernt, die an Robots zurückgegeben werden. Dadurch wird die Belastung des Servers durch Abrufe weiter verringert. %0a%0a:$AuthFormRespCode: Ein selbstentwickelter HTTP-Response-Kode, der mit dem Authentifizierungsformular zum Browser gesendet werden soll. Das Formular wird weiterhin angezeigt und der Benutzer kann das Passwort eintippen, um auf die eingeschränkte Seite oder Datei zuzugreifen. Zum Beispiel: um den "403 Forbidden"-Statuskode für einen eingeschränkten Download zu senden, können Sie in der @@''config.php''@@-Datei das Folgende setzen: %25hlt php%25[@%0aif ($action == 'download')%0a  $AuthFormRespCode = 403;%0a@] %0a%0aSiehe auch:%0a* [[Security|+]]%0a* $EnablePageListProtect%0a* $EnableDirectDownload%0a
time=1684996818
title=Sicherheits-Variablen
