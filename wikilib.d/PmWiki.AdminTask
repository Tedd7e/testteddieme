version=pmwiki-2.3.12 ordered=1 urlencoded=1
author=simon
charset=UTF-8
csum=pm hlt, but this page could be removed (+172)
ctime=1142464431
name=PmWiki.AdminTask
rev=24
targets=Profiles.Pm,PmWiki.Uploads,PmWiki.PasswordsAdmin,PmWiki.SecurityVariables,PmWiki.ReleaseNotes,PmWiki.BackupAndRestore,PmWiki.Download,PmWiki.Installation,PmWiki.LocalCustomizations,PmWiki.DeletingPages,Profiles.BJayaram,Profiles.Tamouse,Category.Administration,!Administration
text=(:Summary:List of PmWiki administration related tasks organized in alphabetical order:)%0a!!PmWiki Administration Tasks%0a%0aThis is a (experimental) list of all PmWiki administration related tasks that is organized in alphabetical order (and delimited by anchors so that it can be reused in other Wiki pages on this site). It is sort of based on core concepts of [[Wikipedia:Darwin_Information_Typing_Architecture | Darwin Information Typing Architecture]] (DITA) in which a topic is an archetype for information type. A topic is a unit of information that describes a single task, concept, or reference item. The information category (concept, task, or reference) is its information type (or infotype).%0a%0aTasks that are general in nature are on a different page. In DITA terms, AdminTask is a topic specialization of Task (which is a topic). Granted DITA is much more powerful and we cannot get all its benefits with PmWiki yet but perhaps one day, thanks to the genius of [[~Pm]], we can try and achieve more with every PmWiki release.%0a%0aThis page (meaning its URL) itself should NOT be linked to from anywhere but the sections should be included by using a syntax such as:%0a-> %25pmhlt%25[@(:include PmWiki.AdminTask#start#end:).@]%0a%0a!!!Administering Passwords%0a[[#pwAdminS]]%0aYou can set passwords on pages and groups exactly as described above for authors. You can also:%0a# set site-wide passwords for pages and groups that do not have passwords%0a# use @@attr@@ passwords to control who is able to set passwords on pages%0a# use @@upload@@ passwords to control access to the file [[upload(s)]] capabilities (if uploads are enabled)%0a# use an @@admin@@ password to override the passwords set for any individual page or group  %0aFor more information on password options available to administrators, see [[PasswordsAdmin]].%0a[[#pwAdminE]]%0a%0a!!!Installation%0a%0a%0a!!!Setting Site Wide Passwords%0a[[#setSWPWS]]                                                                                            %0aOne of the first things an admin should do is set an @@admin@@ password for the site.  This is done via a line like the following in the ''@@local/config.php@@'' file:%0a-> %25hlt php%25@@$DefaultPasswords['admin'] = pmcrypt('secret_password');@@%0a%0aNote that the %25hlt php%25@@pmcrypt()@@ call is required for this -- PmWiki stores and processes all passwords internally as encrypted strings.  See the [[#crypt | crypt section]] below for details about eliminating the cleartext password from the configuration file.%0a%0aTo set the entire site to be editable only by those who know an "edit" password, add a line like the following to ''local/config.php'':%0a-> %25hlt php%25@@$DefaultPasswords['edit'] = pmcrypt('edit_password');@@%0a%0aSimilarly, you can set %25hlt php%25[@$DefaultPasswords['read']@], [@$DefaultPasswords['attr']@], and [@$DefaultPasswords['upload']@]%25%25 to control default @@read@@, @@attr@@, and @@upload@@ passwords for the entire site.  The default passwords are used only for pages and groups which do not have passwords set.  Also, each of the $DefaultPasswords values may be arrays of encrypted passwords:%0a-> %25hlt php%25[@$DefaultPasswords['read'] = array(pmcrypt('alpha'), pmcrypt('beta'));%0a$DefaultPasswords['edit'] = pmcrypt('beta');@]%0a%0aThis says that either "alpha" or "beta" can be used to read pages, but only the "beta" password will allow someone to edit a page.  Since PmWiki remembers any passwords entered during the current session, the "beta" password will allow both reading and writing of pages, while the "alpha" password allows reading only.  A person without either password would be unable to view pages at all.%0a%0aTo generate an encrypted string from your cleartext password so that the cleartext doesn't appear in the config file, go right to %0a->%25hlt url%25@@pmwiki.php?n=PasswordsAdmin?action=crypt@@%0a%0a(add that to tail end of your address URL) for a form to use to encrypt the desired cleartext string into an encrypted string. Then simply copy the encrypted string and paste it in the config file where needed. '''--DP'''%0a%0a[[#setSWPWE]]%0a%0a'''Upgrading'''%0a%0a[[#upgradeS]]%0aTo upgrade PmWiki: %0a%0a* If you're upgrading to a new major release (a release where the second number changes, as in going from 0.5.27 to 0.6.0), then carefully read the [[PmWiki:ReleaseNotes]] before performing an upgrade to see if there are any significant changes or preparation tasks that must be handled before performing the upgrade. Upgrading from a beta version of 2.0 is quite easy, but taking a look at the 2.0 [[PmWiki:ReleaseNotes]] doesn't hurt.%0a%0a* It's ''always'' a good idea to have a [[PmWiki/backup (And Restore)]] copy of your existing PmWiki installation before starting.  You can copy the entire directory containing your existing installation, or you can just make copies of the ''wiki.d/'' directory and any other local customization files you may have created (e.g., ''@@config.php@@'', ''@@localmap.txt@@'', etc.).%0a%0a* [[Download]] the version of PmWiki that you want from https://www.pmwiki.org/pub/pmwiki.%0a%0a* Read the [[Installation]] instructions%0a%0a* Extract the tar image using %25hlt bash%25@@tar -xvfz ''tgzfile''@@%25%25, where ''tgzfile'' is the tar file you downloaded above.  This will create a @@pmwiki-x.y.z@@ directory with the new version of the software.%0a%0a* Copy the files in @@pmwiki-x.y.z@@ over the files of your existing PmWiki installation.  For example, if your existing PmWiki installation is in a directory called ''pmwiki'', then one way to copy the new files over the existing ones is to enter the command:%0a->%25hlt cmd%25@@cp -a pmwiki-x.y.z/. pmwiki@@%0a%0aNote that Mac OS X and other BSD systems will not not have the -a option as a command-line argument for ''cp'', but that's okay, since it's just shorthand for ''cp -dpR'', so use that instead of ''-a''.%0a%0aOn (some) [=FreeBSD=] servers you need to use %0a->%25hlt bash%25[@cp -Rpv pmwiki-.x.y.z/. pmwiki@]%0a%0a%0a5. That's it!  As long as you didn't make any customizations to the ''@@pmwiki.php@@'' script or to the files in ''@@scripts/@@'', your PmWiki installation should continue to run correctly! ([[Local customizations]] should go in ''@@local/config.php@@'')%0a%0a[[#upgradeE]]%0a%0a'''Cleaning Up Deleted Files'''%0a%0a[[#cleanupB]]%0aWhen wiki pages are [[PmWiki.DeletingPages|deleted]], they leave%0abehind residue as the deleted file isn't exactly deleted, but instead%0arenamed to $FullName,del-TIMESTAMP. If you have a lot of deleted pages%0alaying around, this builds up cruft in you file%0aspace. %0a[[PmWiki.DeletingPages#cleanup|This is one method for cleaning up deleted pages.]]%0a[[#cleanupE]]%0a%0a%0a!!!Contributors:%0a(:linebreaks:)%0a[[~BJayaram]]%0a[[~tamouse]]%0a(:nolinebreaks:)%0a%0a-%3cCategory: [[!Administration]]%0a
time=1664861295
