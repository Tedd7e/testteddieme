version=pmwiki-2.3.23 ordered=1 urlencoded=1
author=Petko
charset=UTF-8
csum=Add InsertEditFunction() (+5)
ctime=1208705045
name=PmWiki.UpdatePage
rev=32
targets=PmWiki.PageFileFormat,PmWiki.CustomMarkup,Cookbook.MarkupExpressionSamples,PmWiki.CustomActions,PmWiki.EditVariables,Category.UpdateMe,!UpdateMe,Cookbook.AutoCreatePages,PmWiki.BasicVariables,PmWiki.Functions,Category.PmWikiInternals,!PmWikiInternals,Category.PmWikiDeveloper,!PmWikiDeveloper
text=(:Summary:Technical notes on the UpdatePage() function.  It is updated as of 2.2.0 Beta65.:)''{$:Summary}''%0a(:Audience:Developers:)%0a%0a!! %25hlt php%25@@UpdatePage($editPageName, $old (page object), $new (page object));@@%0a%0a%25hlt php%25[@UpdatePage()@] is a code hook allowing cookbook recipes to mimic the behavior of editing wiki pages via the browser. It accepts a page object (array) of page data then performs all the usual PmWiki housekeeping tasks that would be performed on text submitted by the edit form in a browser window i.e. it preserves history/diff information, updates page revision numbers, updates @@RecentChanges@@ pages, sends email notifications, etc.%0a* "Page object" refers to an array pulled from %25hlt php%25[@RetrieveAuthPage($somePageNameYouAreEditing, $level, $authprompt=true, $since=0);@] (preferred), or [@ReadPage($pagename); @] (disregards page security). Note that @@$new['text']@@ should contain all page data for the new version of the page. See [[PmWiki/PageFileFormat]] for more information on the type of information you may be able to access in the array.%0a* If a page doesn't exist, %25hlt php%25@@UpdatePage()@@ will attempt to create it.%0a* If you retrieved $old using %25hlt php%25@@RetrieveAuthPage($editPageName,$auth,$prompt,READPAGE_CURRENT)@@ and set @@$new=$old@@, then @@UpdatePage()@@ or @@WritePage()@@ will also erase all historical data (because READPAGE_CURRENT only reads and returns the current version of the page without any history; the same happens with [@ReadPage($pagename, READPAGE_CURRENT)@]).%0a%0a!!! Caution%0a%0aIf used incorrectly, %25hlt php%25[@UpdatePage()@] can not only blank pages, but can wipe entire histories of pages - PmWiki cannot recover an old version if you accidentally drop the page history when you read or save a page.%0a%0a!!! Calling %25hlt php%25[@UpdatePage()@]%0a%0a%25hlt php%25@@UpdatePage()@@%25%25 cannot be called directly from @@config.php@@ or an %25hlt php%25@@[=include()=]d@@%25%25 recipe because there are necessary initializations which occur later in @@pmwiki.php@@.  To use %25hlt php%25@@UpdatePage()@@, do it within a [[PmWiki:CustomMarkup | custom markup]], a [[Cookbook:MarkupExpressionSamples | custom markup expression]], or a [[PmWiki:CustomActions | custom action]].%0a%0a%25hlt php%25[@UpdatePage()@]%25%25 does very little itself other than traverse $EditFunctions and call each function contained there.  ($EditFunctions can be overridden by the 4th argument [@$fnlist@], but this is fairly rare).%0a%0aThe global @@$IsPagePosted@@ is set to FALSE at the start of %25hlt php%25@@UpdatePage()@@ and then returned at the end of this function.  Any of the intervening functions can set it to TRUE (indicating successful posting/saving) but normally this is the job of the function PostPage().%0a%0aThe global @@$EnablePost@@ is set to @@1@@ at the start of pmwiki.php, and can be changed to @@0@@ or @@false@@ at any time before PostPage() which would block most EditFunctions from proceeding, and the page will not be saved. %0a%0aHere is the definition of $EditFunctions from @@pmwiki.php@@:%0a%0a%25hlt php%25[@$EditFunctions = array('EditTemplate', 'RestorePage', 'ReplaceOnSave',%0a  'SaveAttributes', 'PostPage', 'PostRecentChanges', 'AutoCreateTargets',%0a  'PreviewPage');@]%0a%0a''There are other functions as of 2.3.x. [[!UpdateMe]].''%0a%0a!!! Recipes can change how edits work%0a%0aCookbook Authors can add their own functions to $EditFunctions as needed.%0a%0aAs an example, suppose you need to know the [@$pagename@] of the page being edited for some reason (Maybe you've added to [@$ROSPatterns@]):%0a%0a%25hlt php%25[@%0a  InsertEditFunction('GetEditPagename', '%3c'); # add at the start%0a  # or possibly: array_unshift($EditFunctions, "GetEditPagename");%0a  %0a  function GetEditPagename($pagename, $p, $n) {%0a    global $EditPagename;%0a    $EditPagename=$pagename;%0a  }%0a@]%0a%0aOr if you need to do processing after a page has been saved:%0a%0a%25hlt php%25[@%0a  InsertEditFunction('MyPostEditProcessing', '>'); // Add to end of $EditFunctions%0a  # or possibly: $EditFunctions[]= "MyPostEditProcessing";%0a  %0a  function MyPostEditProcessing($pagename, $p, $n) {%0a    // mirror page to another site, send an email, update page lists somewhere, etc%0a    // Might check global $EnablePost and $IsPagePosted%0a  }%0a@]%0a%0aOr if you need to do some last checks just before the page is saved to the filesystem:%0a%0a%25hlt php%25[@%0a  InsertEditFunction('MyLastChecks', '%3cPostPage'); // just before PostPage()%0a  # or possibly: array_splice($EditFunctions, array_search('PostPage', $EditFunctions), 0, 'MyLastChecks');%0a  %0a  function MyLastChecks($pagename, $p, $n) {%0a    global $EnablePost;%0a    if(! $EnablePost) return;%0a    %0a    // do something%0a  }%0a@]%0a%0a!! Default $EditFunctions%0a!!!EditTemplate%0aThis function allows pre-populating new pages with the contents of a template page.  If the @@$new['text']@@ contains anything then this function does nothing.%0a%0aThe pagename of the template can be passed in the %25hlt php%25[@$_REQUEST['template']@].%0a%0aOtherwise the [@$EditTemplatesFmt@] array is traversed and each page read until obtaining some text which then becomes the text of the @@$new['text']@@.%0a%0a!!!RestorePage%0a%0aOn a normal save of a page this function does nothing.%0a%0aThe value for [@$Restore@] can be passed by argument to the function, but it will not in the context of %25hlt php%25@@UpdatePage()@@.  The value will be obtained instead from [@$_REQUEST['restore']@].  If this value is not set then this function will do nothing.  If this value is set to a timestamp then the page history will be traversed and the various diffs in page history will be reverse applied until the requested timestamp.%0a%0a!!!ReplaceOnSave%0a%0aThere are 2 arrays: [@$ROEPatterns@] and [@$ROSPatterns@].  In each array the key to the hash is the search-pattern and the value to the hash is the replace-pattern.  [@$ROEPatterns@] is replaced on each edit, [@$ROSPatterns@] only if [@$EnablePost@] is set.  %0a%0a!!!SaveAttributes%0a%0aSeveral different attributes are calculated to become one of the keys of the @@$new[]@@ page array.  (Each of these will then become their own line in the pagefile.)  Targets are calculated as a space-separated list of pages which are linked to from this page.  Properties held in the global [@$SaveProperties@] are copied from the @@$page[]@@ (old page) array.%0a%0a* '''Note:''' [@SaveAttributes@] runs %25hlt php%25[@MarkupToHTML()@] on the page text.  This sets page variables, but may have side effects (if you are keeping a count of your markup, writing to files every time a page is viewed, etc).%0a%0a!!!PostPage%0a%0a[@$IsPagePosted@] is set to false.%0a%0aIf [@$EnablePost@] is true then these steps occur:%0a*Attributes such as 'charset' ([@$Charset@]), 'author' ([@$Author@]), 'author:%3ctimestamp>' ([@$Author@]), and 'host:%3ctimestamp>' (%25hlt php%25[@$_SERVER['REMOTE_ADDR']@]) are set.%0a*A diff is done between the previous text and the current text and the result stored as a '%3ctimestamp>' key.%0a*If the text matches the global [@$DeleteKeyPattern@] then the page is deleted.%0a*%25hlt php%25@@WritePage()@@ is called %0a*[@$IsPagePosted@] is set to true.%0a%0a!!!PostRecentChanges%0a%0aIf [@$IsPagePosted@] is NOT true then do nothing.%0a%0aThe global array %25hlt php%25[@$RecentChangesFmt[]@] is traversed with the KEY to the hashed array being the pagename where the changes should be written to and the VALUE of the hashed array being the text to be written to the end of that page.%0a%0aIf the number of lines in the recentchanges page exceeds the global [@$RCLinesMax@] then the page is chopped appropriately.%0a%0aThe recentchanges page is written via %25hlt php%25@@WritePage()@@.%0a%0a!!!AutoCreateTargets%0a%0aIf link targets within the page match some global and they do not exist then they will be automatically created.  See also [[(Cookbook:)AutoCreatePages]].%0a%0a!!!PreviewPage%0a%0aThis function does nothing if you're not doing a preview.%0a%0a!! Other $EditFunctions%0a%0aThere are other $EditFunctions that come with PmWiki but that are not part of the basic functionality:%0a%0a!!! author.php%0a%0a%25hlt php%25[@ array_unshift($EditFunctions,'RequireAuthor'); @] // Makes sure an author is specified before allowing page to be edited%0a%0a!!! blocklist.php%0a%0a%25hlt php%25[@ array_unshift($EditFunctions, 'CheckBlocklist'); @]%0a%0a!!! draft.php%0a%0a%25hlt php%25[@ array_unshift($EditFunctions, 'EditDraft'); @] // Check if saving to the draft file and if so, change names and Redirect to the draft page to continue edit.%0a%0a* '''Note''': This may change $pagename unexpectedly%0a%0a!!! notify.php%0a%0a%25hlt php%25[@ $EditFunctions[] = 'PostNotify'; @] // Add 'PostNotify' to send an email after edit successfully done%0a%0a!!! pagelist.php%0a%0a%25hlt php%25[@ $EditFunctions[] = 'PostPageIndex'; @] // handle %25pmhlt%25[@(:pagelist:)@] functionality after a page is updated%0a%0a!!! simuledit.php%0a%0a%25hlt php%25[@ array_unshift($EditFunctions,'MergeSimulEdits'); @] // If more than one edit happened since page load, merge the changes before saving%0a%0a!!! transition.php%0a%0aHandles transitions between PmWiki versions.  Used for GUI Edit buttons.%0a%0a!!! urlapprove.php%0a%0a%25hlt php%25[@ array_splice($EditFunctions, array_search('PostPage', $EditFunctions), 0, 'BlockUnapprovedPosts'); @]%0a%0aPuts the %25hlt php%25[@BlockUnapprovedPosts()@] function right before [@PostPage()@]%0a%0a%0a----%0a%0a!!Notes%0a%0a!!!!!Can I call %25hlt php%25@@UpdatePage()@@%25%25 directly from @@config.php@@?%0aNo. As stated on the [[PmWiki/Functions | PmWiki/Functions]]:  %25hlt php%25@@UpdatePage()@@%25%25 cannot be called directly from @@config.php@@ because there are necessary initializations which occur later in @@pmwiki.php@@. It is not enough to just load @@stdconfig.php@@. If you want to use %25hlt php%25@@UpdatePage()@@%25%25 you will need to do it within a [[PmWiki/CustomMarkup | custom markup]], a [[Cookbook/MarkupExpressionSamples | custom markup expression]], or a [[PmWiki/CustomActions | custom action]].%0a%0a----%0a%0aCategory: [[!PmWiki Internals]] [[!PmWiki Developer]]
time=1684477758
