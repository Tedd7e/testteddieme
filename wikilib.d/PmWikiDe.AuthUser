version=pmwiki-2.3.23 ordered=1 urlencoded=1
author=MFWolff
charset=UTF-8
csum=Typo (+1)
ctime=1304945594
name=PmWikiDe.AuthUser
rev=42
targets=PmWikiDe.Passwords,PmWiki.ThoughtsOnAccessControl,Cookbook.QuickStartForAuthUser,PmWikiDe.PathVariables,PmWikiDe.PasswordsAdmin,SiteAdmin.AuthUser,PmWikiDe.SecurityVariables,PmWikiDe.AuthUser,Cookbook.AuthUserViaMicrosoftLDAP,PmWikiDe.BasicVariables,Cookbook.SessionSecurityAdvice,PmWiki.Passwords,PmWiki.PasswordsAdmin,Cookbook.AuthUser,Cookbook.UserLastAction,PITS.00400,Cookbook.HtpasswdForm,Cookbook.UserAdmin
text=(:title Benutzerautorisierung:)%0a(:Summary: Autorisierungverfahren mit Benutzernamen und Passwort erlaubt mehr Kontrolle über Autorentätigkeiten.:)%0a(:Original_Page: PmWiki.{$Name}:)%0a(:Translation_Date: 2011-05-09:)%0a(:Translation_Status: %25green%25fertig%25%25:)%0a(:Audience: Administratoren:)%0a%0aAuthUser ist PmWikis identitätsbasiertes Autorisierungssystem, das die Kontrolle des Zugriffs auf Seiten erlaubt über den Einsatz von Benutzernamen und -Passwörtern (anders als beim Standardsystem, bei dem nur Passwörter verwendet werden und diese nicht an Benutzer, sondern an Seiten oder Gruppen oder die Site gebunden sind). AuthUser kann zusätzlich zu diesem, in der Standardkonfiguration benutzten, [[passwords|passwort-basierten]] Schema benutzt werden. %0a%0aAuthUser ist ein sehr flexibles System zum Verwalten der Zugangskontrolle zu Seiten, aber Flexibilität kann auch Komplexität und vermehrten Aufwand zur Pflege für den Administrator mit sich bringen. Genau darum ist PmWikis Standard das einfachere passwort-basierte System. Wegen ein paar Gedanken zu den jeweiligen Vorzügen der beiden Systeme siehe [[PmWiki:ThoughtsOnAccessControl]]. %0a%0aSiehe auch: [[Cookbook:Quick Start for AuthUser]].%0a%0a!! AuthUser aktivieren%0aUm PmWikis identitätsbasiertes System AuthUser zu aktivieren, braucht man nur die folgende Zeile in die ''@@local/config.php@@'' hinzuzufügen:%0a%0a->%25hlt php%25@@include_once("$FarmD/scripts/authuser.php");@@%0a%0aVergewissern Sie sich, dass Sie [[PasswordsAdmin | ein site-weites Passwort]] gesetzt haben, andernfalls könnten Sie @@[[SiteAdmin.AuthUser]]@@ nicht bearbeiten.%0a%0a->%25note%25 Anmerkung: Ältere Versionen von PmWiki (vor 2.2.0-beta58) nutzten dafür '@@'Site.AuthUser@@''.%0a%0aPmWiki speichert einige Gruppen- und Seiten-Autorisierungsebenen zwischen, wenn auf eine Seite zugegriffen wird. Deshalb ist es besser, @@authuser.php@@ eher weiter vorn in der ''@@config.php@@''-Datei einzusetzen, sicher jedoch%0a* nach allen Rezepten, die eine eigenen Seitenspeicher-Klasse (MySQL, SQLite, Compressed PageStore oder andere) etablieren%0a* und nach jeder Internationalisierung (UTF-8 und XLPage).%0a%0a(Wenn Sie keine eigene Seitenspeicher-Klasse und i18n nutzen, sollte @@authuser.php@@ das Erste in der @@config.php@@ sein.)%0a%0aAlle anderen Rezepte sollten dahinter aufgeführt werden.%0a%0a!! Benutzerkonten anlegen%0a%0aDas Meiste von AuthUsers Konfiguration wird über die [[SiteAdmin.AuthUser]]-Seite erledigt. Zum Ändern der AuthUser-Konfiguration bearbeiten Sie einfach diese Seite wie andere Seiten auch (man braucht typischerweise das Passwort des Site-Administrators dafür). %0a%0aUm einen Login-Konto (account) zu erstellen, fügen Sie zu SiteAdmin.AuthUser einfach Zeilen wie diese hinzu:%0a%0a-> %25pmhlt%25@@username: [=(:=]encrypt ''password'':)@@ %0a%0aUm zum Beispiel "Alice" ein Loginkonto mit dem Passwort "restaurant" zu geben, schreiben Sie also:%0a%0a-> %25pmhlt%25@@alice: [=(:=]encrypt restaurant:)@@%0a%0a%25pmhlt%25Wenn die Seite gespeichert wird, wird der "@@[=(:=]encrypt restaurant:)@@"-Teil des Textes durch eine verschlüsselte Form des Passwortes "restaurant" ersetzt. Diese Verschlüsselung geschieht, damit jemand, der die Seite ansieht, nicht zu einfach das gespeicherte Passwort erschließen kann. %0a%0aUm eines Benutzers Passwort zu ändern oder zurückzusetzen, ersetzt man den verschlüsselten String durch eine weitere  %25pmhlt%25@@[=(:=]encrypt:)@@-Direktive.%0a%0a->%25note%25 Das Passwort darf weder Leerzeichen, noch Tabs, Zeilenumbrüche, Doppelpunkte ":" oder Gleichheitszeichen "=" enthalten; auf einigen Systemen müssen es wenigstens vier Zeichen sein. Bei Benutzernamen und Passwörtern ist die Groß/Kleinschreibung wichtig, so ist "User" nicht dasselbe wie "user".%0a%0a!! Zugriff auf Seiten durch Anmelden kontrollieren%0a%0aSeiten und Gruppen können auf der Basis der Loginkonten geschützt werden, indem man "Passwörter" der Form %25pmhlt%25[@id:benutzername@] in die Passwortfelder bei [@?action=attr@] einträgt (siehe [[PmWikiDe.Passwords|+]]. Damit zum Beispiel eine Seite nur von Alice bearbeitet werden kann, würde man als neues "bearbeiten"-Passwort "[@id:alice@]" eintragen. %0a%0aEs ist möglich, mehrere "id"-Deklarationen und Passwörter in dem "[@?action=attr@]"-Formular einzugeben, deshalb erlaubt die folgende Einstellung den Zugriff durch Alice, Carol und jeden, der das Passwort "schnell" kennt:%0a%0a->@@schnell id:alice,carol@@%0a%0aUm jedem den Zugriff zu erlauben, der sich erfolgreich eingeloggt hat, schreibt man "[@id:*@]".%0a%0aMan kann auch site-weite Einschränkungen einrichten, die auf den Identitäten im $DefaultPasswords-Array (in ''@@local/config.php@@'') basieren: z.&nbsp;B.%0a%0a->  %25hlt php%25[@# Einloggen erforderlich, bevor Seiten gelesen werden können%0a$DefaultPasswords['read'] = 'id:*';%0a# Alice und Carol dürfen bearbeiten%0a$DefaultPasswords['edit'] = 'id:alice,carol';%0a# Alle Admins und Fred dürfen bearbeiten%0a$DefaultPasswords['edit'] = array('@admins', 'id:Fred');@]%0a%0aMan kann das $DefaultPasswords-Array in den lokalen Anpassungsdateien ändern:%0a* ''@@local/config.php@@'' (für das ganze Wiki)%0a* ''@@farmconfig.php@@'' (für die ganze Wikifarm)%0a%0a!![[#auth_groups]] Organisieren der Konten in Gruppen%0a%0aAuthUser macht es auch möglich, Loginkonten in Autorisierungsgruppen zu sammeln, die durch ein einleitendes '@'-Zeichen bezeichnet werden. Wie die Loginkonten werden Gruppenzugehörigkeiten durch Einträge in der @@SiteAdmin.AuthUser@@-Seite verwaltet, Gruppenzugehörigkeit entweder durch Auflisten der Gruppen im Loginkonto (Person gehört zu den Gruppen ...) oder durch Auflisten der Konten für eine Gruppe (Gruppe enthält Leute). Man kann die beiden Arten wiederholt anwenden oder mischen:%0a%0a    @writers: alice, bob%0a    carol: @writers, @editors%0a    @admins: alice, dave%0a%0aUm dann Seitenzugriffe auf eine bestimmte Gruppe zu beschränken, trägt man einfach "[@@gruppe@]" als das "Passwort" in [@?action=attr@] oder in das @@$DefaultPasswords@@-Array ein, gerade so wie "[@id:benutzername@]" für die Zugriffsbeschränkung auf ein Loginkonto eingetragen wurde. %0a%0a!!! Einzelne aus Passwortgruppen ausschließen%0a%0aGruppenpasswortzugehörigkeiten werden über das Bearbeiten der @@SiteAdmin.AuthUser@@-Seite verwaltet. Um eine Passwortgruppe anzugeben, die jedem, der eingeloggt ist, den Zugriff erlaubt, gibt man an:%0a%0a    @wholeoffice: *%0a%0aWenn Fred von dieser Passwortgruppe ferngehalten werden soll:%0a%0a    @wholeoffice: *,-Fred%0a%0aUm allen außer Fred zu erlauben, die Seitenattribute zu ändern, schreibt man beispielsweise in die ''@@config.php@@''-Datei:%0a%0a->%25hlt php%25@@$DefaultPasswords['attr'] = array('id:*,-Fred');@@%0a%0a(:if authid:)%0a>>clip%3c%3c%0a!!!!!Wiki Debug%0a* %25newwin%25 [[Diagnostics -> {$Name}?action=diag]]%0a* %25newwin%25 [[PHPInfo -> {$Name}?action=phpinfo]]%0a>>%3c%3c%0a(:ifend:)%0a%0a!! [[#accountsfromotherpages]] Kontonamen und Passwörter von anderen Wikiseiten holen%0a%0aWenn Sie PmWiki veranlassen wollen, Kontonamen und Passwörter von anderen Seiten als von [[SiteAdmin.AuthUser]] zu holen, können Sie die Variable $AuthUserPageFmt in der ''@@config.php@@''-Datei setzen. $AuthUserPageFmt muss vor dem Aufruf von @@authuser.php@@ gesetzt werden.%0a%0aVor der PmWiki-Version 2.2.108 können Sie PmWiki auf eine andere Seite als [[SiteAdmin.AuthUser]] zeigen lassen mit:%0a%0a    $AuthUserPageFmt = 'EineAndereGruppe.EineAndereSeite';%0a%0aAb der PmWiki-Verion 2.2.108 können Sie PmWiki auf eine andere Seite als [[SiteAdmin.AuthUser]] zeigen lassen mit:%0a%0a    $AuthUserPageFmt = array('EineAndereGruppe.EineAndereSeite', 'EineDritteGruppe.EineDritteSeite');%0a%0aDadurch prüft PmWiki alle aufgelisteten Seiten mit dem selben Format, das für [[SiteAdmin.AuthUser]] dokumentiert ist. Wenn es Wiederholungen gibt, werden frühere Werte durch spätere ersetzt.%0a%0a!! Kontonamen und Passwörter aus externen Quellen holen%0a%0aDas AuthUser-Skript hat die Fähigkeit, Benutzernamen/Passwörter-Paare von anderen Stellen als der @@SiteAdmin.AuthUser@@-Seite zu holen, als da wären%0a* passwd-formatierte Dateien (auf Apache-Servern gewöhnlich '.htpasswd' genannt),  %0a* [[#LDAP|LDAP]]-Server oder sogar %0a* die ''@@local/config.php@@''-Datei. %0a%0a!!! Passwd-formatierte Dateien (.htpasswd/.htgroup)%0a%0aPasswd-formatierte Dateien, in Apache gewöhnlich ''.htpasswd''-Dateien genannt, sind Textdateien, in denen jede Zeile einen Benutzernamen und ein verschlüsseltes Passwort enthält, getrennt durch einen Doppelpunkt. Eine typische ''.htpasswd''-Datei könnte so etwas enthalten:%0a%0a    alice:vK99sgDV1an6I%0a    carol:Q1kSeNcTfwqjs%0a%0aDamit AuthUser diese Benutzer und Passwörter von einer ''.htaccess''-Datei lädt, schreibt man eine Zeile in SiteAdmin.AuthUser, wobei man "/path/to/.htpasswd" dur den Dateisystempfad der ''.htpasswd''-Datei ersetzt: %0a%0a    htpasswd: /path/to/.htpasswd%0a%0aAnlegen und Verwalten der ''.htpasswd''-Datei kann mit einem Texteditor durchgeführt werden (%25green%25???? nur ''.htgroup''!%25%25) oder mit einer Reihe von Drittanbieter-Werkzeugen, die mit ''.htpasswd''-Dateien umgehen können. Beim Apache-Server wird typischerweise ein ''htpasswd''-Kommando mit installiert, mit dem man Konten in ''.htpasswd'' anlegen und verwalten kann.%0a%0a    $ htpasswd /path/to/.htpasswd alice%0a    New password:%0a    Re-type new password:%0a    Adding password for user alice%0a    $%0a%0aEntsprechend kann man ''.htgroup''-formatierte Dateien benutzen, um Gruppenzugehörigkeiten zu spezifizieren. Jede Zeile enthält den Namen einer Gruppe (ohne dem "@"), gefolgt von einem Doppelpunkt, gefolgt von einer durch Leerzeichen getrennten Liste von Benutzernamen in der Gruppe.%0a%0a    writers: carol%0a    editors: alice carol bob%0a    admins: alice dave%0a%0aAnmerkung: Die Gruppen sind nach wie vor "@writers", "@editors" und "@admins" in PmWiki, auch wenn in den Dateien das "@"-Zeichen nicht mitgeschrieben wird. \\%0aDamit AuthUser diese Gruppen lädt, schreibt man eine Zeile in SiteAdmin.AuthUser wie: %0a%0a    htgroup: /path/to/.htgroup%0a%0a%0a!!! Konfiguration durch ''@@local/config.php@@''%0a%0aAuthUser-Konfigurationseinstellungen können auch in der ''@@local/config.php@@''-Datei gemacht werden &ndash; zusätzlich zu der @@SiteAdmin.AuthUser@@-Seite. Solche Einstellungen werden in das @@$AuthUser@@-Array gesetzt und ''müssen vor dem Einfügen des authuser.php-Skripts gesetzt werden''. Einige Beispiele:%0a%0a-> %25hlt php%25[@# setze ein Password für alice%0a$AuthUser['alice'] = pmcrypt('restaurant');%0a# setze ein Password für carol%0a$AuthUser['carol'] = '$1$CknC8zAs$dC8z2vu3UvnIXMfOcGDON0';%0a# definiere die @editors-Gruppe%0a$AuthUser['@editors'] = array('alice', 'carol', 'bob');%0a# Benutze local/.htpasswd für Benutzernamen/Passwörter%0a$AuthUser['htpasswd'] = 'local/.htpasswd';%0a# Benutze local/.htgroup für die Gruppenzugehörigkeit%0a$AuthUser['htgroup'] = 'local/.htgroup';%0a%0ainclude_once("$FarmD/scripts/authuser.php");@]%0a%0a%0a[[#LDAP]]%0a!!! Konfiguration über LDAP%0a%0aDie Authentifizierung kann über einen externen LDAP-Server ausgeführt werden &ndash; setzen Sie einfach einen Eintrag für "ldap" entweder in die @@SiteAdmin.AuthUser@@-Seite oder in die ''@@local/config.php@@''-Datei.%0a%0a-> %25hlt php%25[@# Benutze ldap.airius.com für die Authentifizierung%0a$AuthUser['ldap'] = 'ldap://ldap.airius.com/ou=People,o=Airius?cn?sub';@]%0a%0aVergewissern Sie sich, dass AuthUser nach dem Eintrag für den LDAP-Server eingeschlossen wird. 	%0a%0a-> %25hlt php%25[@# Wir brauchen AuthUser, damit wir ldap für die Passwörter einsetzen können%0a    include_once("$FarmD/scripts/authuser.php");@]%0a%0aUnd denken Sie daran, die Sicherheitsvariablen für "Bearbeiten" und "Versionen" (oder was auch immer) zu setzen:%0a%0a-> %25hlt php%25[@#Sicherheitsvariablen setzen für Bearbeiten und Versionen,%0a# um beides jedermann mit einem ldap-Eintrag zu erlauben:%0a$HandleAuth['diff'] = 'edit'; # Versionen%0a$DefaultPasswords['edit'] = 'id:*'; # Bearbeiten%0a$Author = $AuthId;@]%0a%0aDie LDAP-Authentifizierung in AuthUser folgt dicht dem Modell, das Apache 2.0s [[https://httpd.apache.org/docs/2.0/mod/mod_auth_ldap.html|mod_auth_ldap]]-Modul benutzt;%0asiehe besonders die Dokumentation zu [[https://httpd.apache.org/docs/2.0/mod/mod_auth_ldap.html#authldapurl|AuthLDAPUrl]] wegen einer Beschreibung des URL-Fomates.%0a%0aFür Server, die kein anonymes 'bind' erlauben, bietet Authuser die Variablen @@$AuthLDAPBindDN@@ und @@$AuthLDAPBindPassword@@, um anzugeben, welches 'Binding' zur Suche benutzt werden soll.%0a%0aSiehe auch [[Cookbook:AuthUser via Microsoft LDAP]]%0a%0a!! Setzen des Autorennamen%0a%0aIm Standard benutzt PmWiki den Loginnamen im Autorenfeld des Bearbeiten-Formulars, erlaubt aber den Benutzern, den Wert vorm Speichern zu ändern. Um zu erzwingen, dass der Loginnamen immer als Autorenname benutzt wird, trägt man die folgende Sequenz in die ''@@config.php@@''-Datei ein:%0a%0a-> %25hlt php%25[@include_once("$FarmD/scripts/authuser.php");%0a$Author = $AuthId; # after include_once()@]%0a%0aFür eine größere Flexibilität, die trotzdem einen Verweis auf den autorisierten Benutzer in den Versionen erlaubt, kann man dem Autorennamen einen Präfix aus der $AuthId geben:%0a%0a%25hlt php%25[@%0a    include_once("$FarmD/scripts/author.php");%0a    include_once("$FarmD/scripts/authuser.php");%0a    if ($Author) {%0a        if (strstr($Author, '-') != false) {%0a            $Author = "$AuthId-" . preg_replace('/^[^-]*-/', '', $Author);%0a        } else if ($Author != $AuthId) {%0a            $Author = $AuthId . '-' . $Author;%0a        } else {%0a            $Author = $AuthId;%0a        }%0a    } else {%0a        $Author = $AuthId;%0a    }%0a    $AuthorLink = "[[~$Author]]";%0a@]%0a%0aDas Obige erlaubt den Benutzern einen Autorennamen ihrer Wahl einzugeben, der wird aber immer ersetzt durch einen Namen mit vorangestelltem "$AuthID-".%0aDer Grund, warum $AuthorLink auch  gesetzt werden muss, ist, dass sonst die '$[RecentChanges]'-Seite den falschen Verweis enthält.%0a%0a!!! Das "Autor"-Eingabefeld entfernen%0a%0aDas zwingt die Autoren, mit ihrer AuthID zu schreiben, anstatt ein Feld zu haben, in das sie jeden beliebigen Namen eintragen können. Das ermöglicht der Verwaltung, besser im Auge zu behalten, wer was tut. Diese Zeile verlinkt auch den Autorennamen mit ihrem Profil.%0a-%3cGehen Sie in die @@Site.EditForm@@-Seite, entfernen Sie die Zeile%0a->%25pmhlt%25[@$[Author]: (:input e_author:)@]%0a-%3coder ersetzen Sie sie mit%0a->%25pmhlt%25[@$[Author]: [[Profiles/{$Author}]]@]%0a%0a!! Autorisierung, Sessions und WikiFarms [[#sessions]]%0a%0aPmWiki benutzt PHP-Sessions, um die Benutzerautorisierungsinformationen zu verfolgen. Im Standard ist PHP so konfiguriert, dass alle Interaktionen mit dem selben Server (indentifiziert durch den Domainnamen) als Teil der gleichen Session behandelt werden. %0a%0aDas bedeutet für PmWiki, wenn mehrere Wikis innerhalb des gleichen Domainnamen laufen, dass PHP ein Login für ein Wiki als gültig auch für alle Wikis in der gleichen Domain ansieht. Die leichteste Lösung ist, jedes Wiki anzuweisen, ein verschiedenes "Session-Cookie" zu benutzen. Fügen Sie in der Nähe des Anfangs in einer ''local/config.php''-Datei eines Wikis, vor dem Aufruf von ''authuser'' oder anderen Rezepten, eine solche Zeile ein:%0a%0a-->%25hlt php%25[@session_name('XYZSESSID');@]%0a%0a'XYZSESSID' kann irgendein unverwechselbarer, einmaliger Name sein (nur Buchstaben ist am sichersten). Wegen der exakten Namensregeln sehen Sie nach in der  %0a[[Beschreibung im PHP-Handbuch -> https://php.net/manual/de/function.session-name.php]] unter der PHP-Version, die Sie auf Ihrem Server verwendeten.%0a%0a%25red%25'''Sicherheitshinweis''':%25%25 Der Gebrauch unterschiedlicher Sitzungsnamen in Cookies und/oder URLs hilft gegen Verwirrung bei Wiki-Farmen, ist aber kein Schutz gegen untergeschobene Sitzungsdaten auf dem Server. Siehe hierzu [[Cookbook:Session Security Advice]], Abschnitt "Session injection".%0a%0a!! Siehe auch%0a%0a* [[PmWiki.Passwords]]%0a* [[PmWiki.PasswordsAdmin]]%0a* [[Cookbook:AuthUser]] Wegen Tipps und Tricks%0a* [[SiteAdmin.AuthUser]]%0a%0a!! FAQ%0a>>faq%3c%3c [[#faq]]%0aQ: Kann ich Autorisierungsgruppenzugehörigkeiten in der ''local/config.php'' angeben?%0a%0aA: Ja &ndash; setzen Sie die Gruppendefinition in das $authUser-Array (in config.php).%0a%0a-> %25hlt php%25[@$AuthUser['@editors'] = array('alice', 'carol', 'bob');@]%0a%0a%0aQ: Kann ich mehrere Admin-Gruppen haben?%0a%0aA: Ja, definieren Sie die Gruppen mit %25hlt php%25@@ array('@admins', '@moderators'); @@ wie hier:%0a%0a-> %25hlt php%25[@$DefaultPasswords['admin'] = array( pmcrypt('masterpass'), # globales Passwort%0a    '@admins', '@moderators', # + Benutzer in diesen Gruppen%0a    'id:Fred', 'id:Barney');  # + Benutzer Fred und Barney@]%0a%0a%0aQ: Ich betreibe mehrere Wikis unter dem gleichen Domainnamen, und Logins von einem Wiki erscheinen in einem anderen Wiki. Sollten die nicht unabhängig voneinander sein?%0a%0aA: Das wird verursacht von der Art, wie PHP Sessions behandelt. Siehe [[PmWikiDe.AuthUser#sessions]] wegen weiterer Details.%0a%0a%0aQ: Gibt es einen Weg, die Zeit des letzten Logins für jeden Benutzer zu speichern, wenn man AuthUser benutzt?%0a%0aA: Siehe [[Cookbook:UserLastAction]].%0a%0a%0aQ: Obwohl alle Einstellungen korrekt zu sein scheinen, funktioniert die Authentifizierung gegen LDAP nicht und es gibt kein LDAP-Log. Was ist falsch?%0a%0aA: Vergewissern Sie sich, dass das ldap-php-modul installiert ist ( für Debian: apt-get install php(4|5)-ldap ; apache(2)ctl graceful )%0a%0a%0aQ: Das Loginformular fragt nach Benutzernamen und Passwort, aber nur das Passwort spielt eine Rolle.%0a%0a-> Der Benutzername kann leer bleiben und trotzdem gelingt ein Einloggen unter dem Account. Ist das so gewollt und wenn, kann ich das so ändern, dass Passwort und Benutzername beide eingegeben werden müssen? - X1/18/07 Ich glaube, das hat was mit der Benutzung des Adminpasswortes zu tun.  Ich habe einen Testaccount angelegt und es funktioniert.%0a%0aA: Vergewissern Sie sich, dass Sie nicht das Adminpasswort eingeben, wenn sie den Account testen. Wenn das Passwort mit dem des Admin übereinstimmt, wird die Autorisierung direkt durch die ''@@config.php@@''-Datei vorgenommen und die anderen Systeme werden übersprungen.%0a%0aA: Berücksichtigen Sie, dass man sich selbst mit eingeschaltetem AuthUser immer noch mit einem leeren Benutzernamen und nur der Eingabe des Passwortes einloggen kann. In dem Fall wird jedes eingegebene Passwort "akzeptiert", aber nur Passwörter, die in einem bestimmten Kontext authentifizieren, geben Ihnen auch Autorisierungsrechte. AuthUser koexistieren komfortabel mit dem passwort-basiertes System, wenn man diese Möglichkeit nutzt.%0a%0aWenn Sie Benutzernamen und Passwort beide abfordern wollen, dann müssen sie eine Admin-ID '''vor''' dem Einbinden von ''@@authuser.php@@'' setzen:%0a %0a-> %25hlt php%25[@%0a## Define usernames and passwords.%0a$AuthUser['carol'] = '$1$CknC8zAs$dC8z2vu3UvnIXMfOcGDON0';%0a%0a## Enable authentication based on username.%0ainclude_once('scripts/authuser.php');%0a%0a# $DefaultPasswords['admin'] = pmcrypt('secret');%0a$DefaultPasswords['admin'] = 'id:carol';%0a@]%0a%0aEin Benutzername und ein Passwort werden dann beide erforderlich sein, bevor ein Login erfolgreich ist.  %0a %0a%0aQ: Gibt es irgendeinen Weg, die IP-Adresse zu verbergen, sobald man eingeloggt ist, so dass registrierte Benutzer ihre IP-Adresse gegenüber jedem außer dem Administrator unsichtbar halten können? %0a%0aA: Ja, siehe die in PITS:00400 angebotene Lösung.%0a	%0a%0aQ: Gibt es eine Möglichkeit, dass Leute sich selbst registrieren können über AuthUser?%0a%0aA: Sie können in zwei Kochbüchern nach Rezepten sehen, die dieses Feature anbieten: in [[(Cookbook:)HtpasswdForm]] und [[(Cookbook:)UserAdmin]].%0a%0a%0aQ: Ich hätte es gern, nachdem ich AuthUser angeschaltet habe und ein Benutzer auf meiner Site authentifiert ist, dass, wenn ich ein Passwort für eine bestimmte Seite oder Gruppe gesetzt habe, dieser Benutzer nur noch die typische Passwortzeile sieht und nicht mehr das Formular zur Eingabe von Benutzernamen und Passwort. %0a%0aA: Siehe  [[diesen Thread in der Mailingliste (authuser vs passwords) -> https://www.pmwiki.org/pipermail/pmwiki-users/2008-November/052767.html]]. %0a%0aQ: Wie erlaubt man das Lesen oder Bearbeiten einer Seite oder Gruppe nur angemeldeten Besuchern?%0a%0aA: Sie können die Passwortfelder auf @@''id:*''@@ setzen. Navigieren Sie zu @@''Gruppe.Seite?action=attr''@@ (für eine einzelne Seite) oder zu @@''Gruppe.GroupAttributes?action=attr''@@ (für die ganze Gruppe) und füllen Sie die Felder "$[Set new read password:]" und "$[Set new edit password:]" mit @@''id:*''@@ aus, dann speichern Sie die Seite (das Formular).  %0a%0a[[#faqend]]%0a>>%3c%3c%0a
time=1684995907
title=Benutzerautorisierung
