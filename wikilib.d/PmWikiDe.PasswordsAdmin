version=pmwiki-2.3.5 ordered=1 urlencoded=1
author=MFWolff
charset=UTF-8
csum= hlt php, pm hlt (+364)
ctime=1180629743
name=PmWikiDe.PasswordsAdmin
rev=42
targets=PmWikiDe.Passwords,PmWikiDe.WikiGroup,PmWikiDe.Security,PmWikiDe.LocalCustomizations,PmWikiDe.WikiAdministrator,Category.Spam,!Spam,PmWikiDe.AvailableActions,PmWikiDe.SecurityVariables,Main.GroupAttributes,PmWiki.GroupAttributes,PmWikiDe.AuthUser,PmWikiDe.PasswordsAdmin,Cookbook.RequireAuthor,Cookbook.ProtectEmail,PmWiki.ConditionalMarkup,Cookbook.HtpasswdForm,Cookbook.UserAuth2,PmWikiDe.GroupCustomizations,Cookbook.LimitWikiGroups,Cookbook.NewGroupWarning,Cookbook.LimitNewPagesInWikiGroups,Site.AuthForm,Cookbook.CustomAuthForm,Site.AttrForm,Cookbook.CustomAttrForm
text=(:title Passwörter verwalten:)%0a(:Summary: Administration der (site-weiten) Passwörter:)%0a(:Original_Page: PmWiki/{$:Page}:)%0a(:Translation_Date: 2015-05-19:)%0a(:Translation_Status: %25green%25fertig%25%25:)%0a(:Audience: Administratoren:)%0a%0a%0aPmWiki hat eine eingebaute Unterstützung für den Schutz mit [[Passwords|Passwörtern]] für verschiedene Bereiche der Wiki-Site. Passwörter können auf Einzelseiten, auf [[WikiGroup|+]] oder die gesamte Website angewendet werden. Das hier beschriebene Passwortschutz-System ist nur ein kleiner Ausschnitt des kompletten Sicherheitssystems. Weitere Informationen dazu finden sich auf der Seite [[Security|Sicherheit]].%0a%0aAutoren können PmWiki, wie in [[Passwords|Passwörter]] beschrieben, dazu benutzen um an Einzelseiten und [[WikiGroup|+]] Passwörter anzuhängen. Der [[WikiAdministrator]] kann jedenfalls auch Passwörter in den Dateien für [[LocalCustomizations|lokale Anpassungen]] festlegen, so wie weiter unten beschrieben. Anmerkung: Man kann Passwörter nicht zuverlässig in Seiten- oder Gruppenanpassungsdateien setzen. Siehe im   [[#faq|FAQ-Abschnitt]] wegen der Details. %0a%0a[[#authlevel]]%0a!! Passwortgrundlagen%0a%0aPmWiki unterstützt verschiedene Zugangsstufen zu Wikiseiten, Autorisierungsebenen genannt:%0a* '''@@read@@'''-Passwörter erlauben das Anschauen der Inhalte von Wikiseiten.%0a* '''@@edit@@'''-Passwörter kontrollieren das Bearbeiten und Verändern von Wikiseiten (effektiv gegen [[!Spam]]).%0a* '''@@attr@@'''-Passwörter kontrollieren, wer Passwörter auf Seiten überhaupt setzen darf (und künftig in PmWiki bereit gestellte Eigenschaften).%0a* '''@@upload@@'''-Passwörter kontrollieren, wenn das Hochladen von Dateien aktiviert ist, das Hochladen von Dateien und Anhängen. %0a* Ergänzend können alle [[available actions|verfügbaren Aktionen]] durch Passwörter autorisiert werden.%0a* Zum Schluß gibt es noch das '''@@admin@@'''-Passwort, welches einem Administrator erlaubt, Passwörter jeder Einzelseite oder Gruppe zu überschreiben oder außer Kraft zu setzen.%0a%0aSeiten haben ihre Passwörter als "Seiteneigenschaften", welche mittels Anhängen an die URL von @@?action=attr@@ zugänglich gemacht werden. Passwörter für Gruppen stehen auf einer besonderen, für jede Gruppe existierenden, "GroupAttributes" genannten Seite. Globale, die Website übergreifende Passwörter werden vom $DefaultPasswords-Array (Datenfeld) aus gesteuert. Alle Passwörter werden in einem verschlüsselten Format gespeichert, so dass andere Benutzer auf dem System befindliche Dateien, die eines Passworts bedürfen, nicht durch einfaches Browsen oder Erstöbern erreichen können.%0a%0aWas bedeuten "leeres Passwort", "kein Passwort" und "gesperrtes Passwort".%0a* "Kein Passwort" und "leeres Passwort" bedeuten, dass die Aktion ohne ein Passwort eingeben zu müssen ausgeführt werden kann, z.&nbsp;B. das Bearbeiten einer Seite.%0a* Gesperrtes Passwort bedeutet, es wird ein Passwort angefordert, aber jede Eingabe wird scheitern. Das verschlüsselt gespeicherte Passwort hat nur ein einziges Zeichen (z.&nbsp;B. einen Stern '*'), wogegen das zum Vergleichen aus der Eingabe erzeugte verschlüsselte Passwort 34 Zeichen hat, eine Übereinstimmung kann es nie geben, die Aktion wird also immer abgewiesen. Z.&nbsp;B. wird ein Bearbeiten-Passwort in einer Seite durch den Eintrag %0a-->[@passwdedit=$1$D95.QF0.$DA6/xUuCY83Sh98CBau7g/@]%0a->gekennzeichnet (hier: geheim). %0a->Fehlt die Zeile (kein Passwort) oder ist der Eintrag [@passwdedit=@] (leeres Passwort), kann die Seite bearbeitet werden &ndash; es sei denn, weiterreichende (gruppen- oder site-weite) Beschränkungen bestehen. Ist der Eintrag [@passwdedit=*@] ist das Passwort gesperrt und ein Bearbeiten ist unmöglich. %0a%0aPer Voreinstellung hat PmWiki die folgenden Passworteinstellungen:%0a* $DefaultPasswords ist mit leeren (also ohne) @@read@@-, @@edit@@-, und @@attr@@-Passwörter eingestellt. %0a* Das @@admin@@- und das @@upload@@-Passwort sind zunächst gesperrt.%0a* Die Main- und die PmWiki-Gruppe haben ein gesperrtes @@attr@@-Passwort in ihren jeweiligen GroupAttributes-Seiten, um Autoren daran zu hindern, Passwörter auf Seiten in diesen Gruppen zu setzen. Um diese Passwörter zu verändern, wird [[Main.GroupAttributes?action=attr]] oder [[PmWiki.GroupAttributes?action=attr]] mit den entsprechenden Rechten gebraucht.%0a* Die Seiten der Site-Gruppe, mit Ausnahme der SideBar, sind gesichert gegen Bearbeiten; die Site.SideBar-Seite erfordert das @@admin@@- oder das site-weite @@edit@@-Passwort.%0a%0aEin @@admin@@-Passwort kann benutzt werden, um die "gesperrten" Passwörter zu überwinden, darüber hinaus funktioniert gar kein Passwort. Natürlich kann der Administrator die gesperrten Passwörter setzen. Dann funktionieren ''diese'' Passwörter. %0a%0a%0a[[#passwdsetzen]][[#settingsitewidepasswords]]%0a!!Site-weite Passwörter setzen%0a%0aEines der ersten Dinge, die ein Administrator nach dem Installieren tun sollte, ist ein @@admin@@-Passwort setzen. %0aUm das websiteweite Administrator-Passwort auf "@@meingeheimnis@@" zu setzen, kann der Administrator die folgende Zeile in die Datei ''@@local/config.php@@'' setzen:%0a%0a-> %25hlt php%25$DefaultPasswords['admin'] = pmcrypt('meingeheimnis');%0a%0aBeachten Sie, dass dafür der @@pmcrypt()@@-Aufruf notwendig ist &ndash; PmWiki speichert und behandelt alle Passwörter intern als verschlüsselte Strings. %25note%25Siehe den [[#crypt|Abschnitt 'Passwörter verschlüsseln']] weiter unten wegen Details, wie man das Klartext-Passwort aus der ''config.php''-Datei eliminieren kann.%25%25%0a%0aUm die ganze Site nur für solchen Benutzer bearbeitbar zu machen, die ein @@Bearbeiten@@-Passwort kennen, fügt man eine Zeile wie die Folgende in die ''@@local/config.php@@''-Datei ein:%0a%0a-> %25hlt php%25$DefaultPasswords['edit'] = pmcrypt('bearbeiten_passwort');%0a%0aÄhnlich kann man für jede der [[available actions|verfügbaren Aktionen]] ein site-weites Passwort setzen, d.&nbsp;h. %25hlt php%25[@$DefaultPasswords['read']@], [@$DefaultPasswords['edit']@] und [@$DefaultPasswords['upload']@] zur Kontrolle des Standard-@@read@@-, -@@edit@@-, und -@@upload@@-Passworts für die ganze Site. Diese Standardpasswörter werden bei Seiten und Gruppen verwendet, für die kein Passwort gesetzt ist, und als zusätzliches Passwort für Seiten, für die ein Passwort gesetzt ist. Auch darf jedes der $DefaultPasswords ein Array verschlüsselter Passwörter enthalten. %0a%0a-> %25hlt php%25$DefaultPasswords['read'] = array(pmcrypt('alpha'), pmcrypt('beta'));%0a-> %25hlt php%25$DefaultPasswords['edit'] = pmcrypt('beta');%0a%0aDas heißt, dass sowohl "alpha" als auch "beta" zum Betrachten von Seiten verwendet werden können, aber nur "beta" erlaubt jemandem das Bearbeiten der Seiten. Da PmWiki Passwörter, die einmal eingegeben wurden, während einer Sitzung behält, erlaubt das "beta"-Passwort sowohl Betrachten als auch Bearbeiten, während das "alpha"-Passwort nur Betrachten erlaubt. Eine Person ohne eines der Passwörter könnte Seiten noch nicht einmal ansehen. %0a%0aUm eine Aktion zu sperren, sodass nur Admins sie ausführen können, benutzen Sie @@'@lock'@@ als Wert, ohne @@pmcrypt@@:%0a%0a-> %25hlt php%25$DefaultPasswords['edit'] = '@lock'; %0a%0a!! Passwörter durch Referenzen setzen%0a%25note%25Dies ist ein unbeabsichtigtes Feature.%0a%0aPasswörter durch Referenzen zu setzen, erlaubt dem Administrator, das Passwort für einen ganzen Satz von Seiten zu ändern, das geht so einfach wie das Ändern von site-weiten Passwörtern. (Andernfalls müsste man die Attribute jeder Seite individuell ändern.) Man gibt in den [[Passwords#pageattr|Seiten]]- oder [[Passwords#groupattr|Gruppen]]-Attributen ein:%0a%0a->  @_site_MeinLevel2%0a%0aund in der lokalen Konfigurationsdatei setzt man das eigentliche Passwort mit Zeilen wie diesen:%0a%0a->  %25hlt php%25$DefaultPasswords['MeinLevel2'] = array(pmcrypt('secret'), '@admins');%0a->  %25hlt php%25$DefaultPasswords['MeinLevel9'] = array('$1$NuBV/Mcc$GG3J60h.TLczUTRKhoVPM.');%0a%0aBeachten Sie, dass Passwörter, die durch Referenzen in einer Konfigurationsdatei gesetzt werden, gegenwärtig nicht als site-weite Passwörter verwendet werden können. Doch können Sie Ihr @_site_level ausdrücklich im Gruppenattribut aller Gruppen einsetzen &ndash; mit dem gleichen Effekt. Einmal als Gruppenattribut eingesetzt wird das Passwort auf alle Seiten der Gruppe angewendet, es sei denn, es wird überschrieben, wie jedes anderen Passwort auch.%0a%0a!! Identitätsbasierte Autorisierung (Benutzername/Passwort-Logins, [[AuthUser]])%0a%0aAnders als viele Systeme, die '''identitätsbasierte''' Systeme zu Kontrolle der Seitenzugriffe einsetzen (d.&nbsp;h. sie benutzen einen separaten ''Benutzenamen'' und ein ''Passwort'' für jeder Person), kommt PmWiki mit einem ''passwortbasierten'' System aus, wie es oben beschrieben wurde. %0aGenerell sind passwortbasierte Systeme einfacher zu verwalten, da sie den administrativen Overhead des Erstellens von Benutzerkonten, des Restaurierens verlorengegangener Passwörter, und des Verzahnens der Benutzernamen mit erlaubten Aktionen vermeiden.  %0a%0aAllerdings erweitert PmWikis ''@@authuser.php@@''-Skript das passwortbasierte System um den Zugriff auf Seiten, auf der Basis einer Benutzername-Passwort-Kombination zu erlauben. Siehe [[AuthUser]] wegen weiterer Details über die Zugriffskontrolle auf Seiten, basierend auf Benutzeridentität.%0a%0a%0a!! Sicherheitslöcher ...%0a%0aAdministratoren müssen sorgfältig planen, wo Passwörter angewendet werden, um das Öffnen unbeabsichtigter Sicherheitslöcher zu vermeiden. Wenn Ihr Wiki offen ist (jeder kann lesen und schreiben), scheint das nicht beunruhigend zu sein, '''außer''' ein böswilliger oder verwirrter Benutzer kann ein Ansehen-Passwort für eine Gruppe setzen und die Gruppe vollständig unzugänglich für alle andern Benutzer machen. %0aAls das Allerwenigste sollte auch ein offenes Wiki ein site-weites "admin"-Passwort und ein site-weites "attr"-Passwort in der ''config.php''-Datei gesetzt haben. Die ''sample-config.php''-Datei, die mit PmWiki ausgeliefert wird, zeigt, dass (nur) die PmWiki- und die Main-Gruppe "attr" standardmäßig gesperrt haben, aber wenn jemand eine neue Gruppe anlegt, ist "attr" frei. Administratoren müssen jedes Mal daran denken, das "attr"-Passwort für jede neue Gruppe zu setzen (wenn es gewünscht ist).  %0aEine einfachere Lösung ist, diese Zeilen in die ''config.php''-Datei zu schreiben:%0a%0a-> %25hlt php%25[@%0a$DefaultPasswords['admin'] = pmcrypt('youradminpassword');%0a$DefaultPasswords['attr'] = pmcrypt('yourattrpassword');%0a@]%0a%0a[[#crypt]]%0a!! Passwörter verschlüsseln in ''@@config.php@@''%0a%0aEinen Pferdefuß hat es, die @@pmcrypt()@@-Funktion in der ''@@config.php@@''-Datei direkt zu verwenden, um Passwörter zu setzen, schließlich kann jeder, der die Möglichkeit hat, in die ''@@config.php@@''-Datei hineinzusehen, das unverschlüsselte Passwort sehen. Wenn zum Beispiel die ''@@config.php@@''-Datei %0a%0a-> %25hlt php%25$DefaultPasswords['admin'] = pmcrypt('meingeheimnis');%0a%0aenthält, ist das "meingeheimnis"-Passwort als Klartext für andere zu sehen. Allerdings kann ein Wikiadministrator eine verschlüsselte Form des  Passwortes direkt eintragen und benutzen, indem er [@?action=crypt@] an irgend einen URL einer Wikiseite im Ziel-Wiki anfügt (oder springen Sie eben zu [[{$Name}?action=crypt]] in Ihrem eigenen Wiki).%0aDiese Aktion präsentiert ein Formular, in das man sein Passwort einträgt und das eine verschlüsselte Version des Passwortes erzeugt und anzeigt für den Gebrauch in der ''config.php''-Datei. Wenn also das Passwort "meingeheimnis" übergeben wird, liefert PmWiki einen String zurück, der etwa so aussieht:%0a%0a->[@$1$sG2.F8..$g/tgMqCFlIKj1iFkcAAxx0@]%0a%0adazu eine Zeile, die man fast eins zu eins in die ''config.php''-Datei kopieren kann:%0a%0a->%25hlt php%25$DefaultPasswords['type']='$1$sG2.F8..$g/tgMqCFlIKj1iFkcAAxx0';%0a%0aMan muss nur noch @@'type'@@ durch @@'admin'@@ersetzen.%0a%0aBeachten Sie, dass in dieser verschlüsselten Form der Funktionsname "pmcrypt" und die Klammern entfernt sind, da das Passwort bereit verschlüsselt ist. Auch muss das Passwort in einfache Anführungszeichen gesetzt werden. %0aIn diesem Beispiel ist das Passwort, das der Administrator benutzt, noch immer "@@meingeheimnis@@", aber wenn jemand in die ''@@config.php@@''-Datei sieht, wird er das Passwort durch bloßes Ansehen des verschlüsselten Passwortes nicht herausbekommen. %0a''@@?action=crypt@@'' liefert für ein und dasselbe Passwort verschiedene Verschlüsselungen &ndash; das ist normal, und macht es um so schwieriger, das eigentliche Passwort herauszubekommen.  %0a%0aBitte beachten Sie, dass Sie das Passwort mit ''@@?action=crypt@@'' auf dem Wiki erzeugen, wo es gebraucht werden soll. Ein Passwort, das auf einem System erzeugt wurde, kann auf einem anderen System funktionieren &ndash; oder auch nicht.%0a%0a!! Passwörter entfernen%0a %0aUm ein Sitepasswort vollständig zu entfernen, so wie das standardmäßig gesperrte Passwort für 'upload', setzt man einen leeren String ein:%0a %0a-> %25hlt php%25$DefaultPasswords['upload'] = '';%0a %0aEs kann auch das Sonderpasswort "@nopass" (wird in der $AllowPassword Variablen festgelegt) mittels @@?action=attr@@ gesetzt werden. Dadurch wird eine nicht passwortgeschützte Seite in einer passwortgeschützten Gruppe erstellt oder eine nicht passwortgeschützte Gruppe innerhalb einer passwortgeschützten Website.%0a %0a %0a!! Ein Passwort ungültig machen oder aufheben%0a%0aWenn ein Passwort kompromittiert ist und der Wikiadministrator das Passwort schnell ungültig machen möchte, ist das Folgende in der '@@'local/config.php@@''-Datei eine schnelle Lösung:  %0a %0a-> %25hlt php%25[@%0a$ForbiddenPasswords = array('secret', 'tanstaafl');%0aif (in_array(@$_POST['authpw'], $ForbiddenPasswords)) %0a    unset($_POST['authpw']);%0a@]%0a%0aDas hindert "secret" und "tanstaafl" daran, je wieder als ein gültiges Autorisierungspasswort angenommen zu werden ohne Rücksicht darauf, welche Seite es nutzt. %0a%0a!! Siehe auch %0a* das $HandleAuth-Array, das das geforderte Authentifikationsniveau setzt, das für eine Aktion erforderlich wird und %0a* [[Cookbook:RequireAuthor]] (nur in englisch)%0a%0a[[#protectingactions]]%0a!! Aktionen schützen (Beispiel)%0a%0aJede verfügbare [[available actions| Aktion]] kann durch ein Passwort geschützt werden.%0aKochbuchautoren, die Skripten mit eigenen Aktionen bereitstellen, können dies auch benutzen, aber ich begrenze das Beispiel auf eine (standardmäßig) nicht geschützte [@?action=source@]. Diese Aktion zeigt die Wikiquelle der aktuellen Seite. Manchmal möchte man das nicht, insbesondere um [[Cookbook:protect email|E-Mail zu schützen]] oder man benutzt ein paar [[PmWiki/conditional markup| bedingte Texte]], die nicht einfach vor Jedem aufgedeckt werden sollen oder nur von Personen, die das Recht haben, die Seite zu bearbeiten.%0a%0aEs gibt einige Lösungen dafür:%0a# Sie begrenzen "source" nur auf Verfasser und fügen das zur ''local/config.php''-Datei hinzu:%0a%0a-->  %25hlt php%25[@$HandleAuth['source'] ='edit';@]%0a %0a# Um "source" mit einem eigenen Passwort zu versehen, fügen Sie das hinzu:%0a%0a-->  %25hlt php%25[@$HandleAuth['source'] ='source';@]%0a-->  %25hlt php%25[@$DefaultPasswords['source'] = pmcrypt('secret');@] # ''[[#crypt|siehe oben]]''%0a%0aWenn Sie das Passwort zusätzlich in die Attributes-Seite setzen möchten:%0a %0a-->  %25hlt php%25[@$PageAttributes['passwdsource'] = "$['Set new source password']";@]%0a%0aIm allgemeinen gilt: Fügen Sie einem Aktionsnamen in dem [@$PageAttributes@]-Array den Präfix 'passwd' hinzu, zeigt das an, Sie möchten für das gegebene Feld, dass es beim Speichern verschlüsselt wird.%0a%0aDer volle Satz von Schritten zum Hinzufügen einer neuen Passworthandhabung für eine Aktion wie "diff" wäre:%0a%0a-> %25hlt php%25[@%0a# Füge ein neues (verschlüsseltes) Feld zur 'attr'-Seite hinzu%0a$PageAttributes['passwddiff'] = "$['Set new history password']";%0a%0a# lösche das Standardpasswort für 'diff'%0a$DefaultPasswords['diff'] = '';%0a%0a# Sage PmWiki, dass das 'diff'-Passwort die Aktion 'diff' erlaubt%0a$HandleAuth['diff'] = 'diff';%0a%0a# Sage PmWiki, dass das 'read-Passwort%0a# (oder alternativ das 'edit'-Passwort)%0a# auch reicht, um 'diff' zu ermöglichen.%0a# natürlich geht auch das 'admin'-Passwort.%0a%0a$AuthCascade['diff'] = 'read';    ## or 'edit'%0a@]%0a%0a!!FAQ%0a>>faq%3c%3c [[#faq]]%0a%0aQ: Es scheint ein Standardpasswort zu geben, welches ist es?%0aA: Es gibt keine gültigen Passwörter, bis Sie eines setzen. [[Passwords admin#passwdsetzen|Site-weite Passwörter setzen]] erklärt, wie man eines setzt.%0a%0a-> PmWiki kommt "out of the box" mit dem @@$DefaultPasswords['admin']@@ auf '*' gesetzt. Das heißt nicht, das Passwort ist ein Sternchen, es bedeutet, das Standard-Administrator-Passwort muss etwas sein, das verschlüsselt zum Sternchen wird. Da das für die @@pmcrypt()@@-Funktion unmöglich ist, jemals einen ein-Zeichen-langen verschlüsselten Wert zurückzugeben, ist das Administrator-Passwort tatsächlich gesperrt, bis der Administrator ein Passwort in der ''@@config.php@@''-Datei setzt. %0a%0a%0aQ: Wie benutze ich passwd-formatierte Dateien (wie .htpasswd) für die Authentifizierung?%0a%0aA: Siehe [[AuthUser]], Cookbook:HtpasswdForm oder Cookbook:UserAuth2.%0a%0a%0aQ: Gibt es irgendetwas, das ich in das @@GroupAttributes@@-Feld eintragen kann, was 'das gleiche wie das Administrator-Passwort' bedeutet? Wenn nicht, gibt es irgendetwas, das ich in die ''@@config.php@@''-Datei eintragen kann, um ebendas zu erreichen?%0a%0aA: Geben Sie '@lock' in @@GroupAttributes?action=attr@@ ein, damit diese Gruppe ein Administrator-Passwort benötigt.%0a%0a%0aQ: Wie schütze ich &ndash; sagen wir mal &ndash; alle RecentChanges-Seiten gegen Bearbeiten?%0a%0aA: Siehe [[PmWikiDe/Security#wikivandalism]]%0a%0a%0aQ: Wie kann ich alle Seiten in einer Gruppe gegen Ansehen ('read') schützen, mit Ausnahme der Startseite (@@HomePage@@), wenn ich dafür Konfigurationsdateien benutzen will?%0a%0aA: Wie in [[PmWikiDe.GroupCustomizations|+]] beschrieben, sollten Per-Gruppen- oder Per-Seiten-Konfigurationsdateien nicht benutzt werden, um Passwörter zu setzen. Der Grund ist, dass Per-Gruppen- oder Per-Seiten-Konfigurationsdateien nur für die aktuelle Seite geladen werden. Wenn  %25hlt php%25@@[=$DefaultPasswords['read']=]@@ in der ''@@local/GruppeA.php@@''-Datei gesetzt ist, dann kann jemand eine Seite in einer anderen Gruppe nutzen, um Inhalte von Seiten aus GruppeA zu lesen. Zum Beispiel könnte Main.WikiSandbox dies enthalten:%0a%0a--> %25pmhlt%25[=(:include GroupA.SomePage:)=]%0a%0aund weil die ''GruppeA.php''-Datei nicht geladen wird (wir sehen uns ja Main.WikiSandbox an &rarr;  ''local/Main.php''), ist kein Ansehen-Passwort gesetzt.%0a%0a%0aQ: Wie kann ich das Anlegen neuer Seiten mit einem Passwort schützen?%0a%0aA: Siehe Cookbook:LimitWikiGroups, Cookbook:NewGroupWarning, Cookbook:LimitNewPagesInWikiGroups.%0a%0aQ: Wie ändere ich den Schirm mit der Aufforderung zum Passwort-Eingeben?%0a%0aA: Wenn Ihre Frage ist, wie ändere ich die Seite ... Bearbeiten Sie [[Site.AuthForm]]. Wenn ihre Frage dahingeht, wie man umstellt, welche Seite aufgerufen wird, wenn man nach einem Passwort gefragt wird, suchen Sie Hilfe bei [[Cookbook:CustomAuthForm]]. %0a%0a%0aQ: Wie ändere ich die Aufforderung auf dem Attribute-(@@?action=attr@@)-Schirm?%0a%0aA: Legen Sie einfach eine neue Seite an ([[Site.AttrForm]]), und fügen Sie die folgende Zeile in die ''@@config.php@@''-Datei ein:%0a%0a-->@@$PageAttrFmt = 'page:Site.AttrForm';@@%0a%0aBeachten Sie, dass das nur den Text über den Eingabefeldern ändert und nicht die Eingabefelder selbst &ndash; die Eingabefelder muss man getrennt davon behandeln. Siehe [[Cookbook:CustomAttrForm]] wegen weiterer Informationen.%0a%0aQ: Ich bekomme einen http error 500 "Internal Server Error", wenn ich versuche, mich einzuloggen. Was ist falsch?%0a%0aA: Das kann passieren, wenn das verschlüsselte Passwort nicht auf dem Server erzeugt wird, auf dem PmWiki gehostet wird. \\%0aDie crypt-Funktion hat sich während der Entwicklung von PHP geändert, d.&nbsp;h. dass ein Passwort, das mit PHP 5.2 verschlüsselt wurde, nicht mit PHP 5.1 entschlüsselt werden kann, aber PHP 5.2 kann Passwörter entschlüsseln, die mit PHP 5.1 verschlüsselt wurden. \\%0aDiese Situation passiert normalerweise, wenn Sie Alles auf Ihrem lokalen Rechner mit der letzten PHP-Version vorbereitet haben und Sie die Passwörter auf einen Webserver hochladen, der mit einer älteren Version läuft. \\%0aDer gleiche Fehler tritt auf, wenn Sie verschlüsselte Passwörter in die ''@@local/config.php@@''-Datei einfügen.%0a%0aLösung: Erzeugen Sie die Passwörter auf dem System mit der ältesten PHP-Version und benutzen Sie sie auf allen anderen Systemen.%0a%0a%0aQ: Ich möchte, dass meine Benutzer nur ein Bearbeiten-Passwort erstellen müssen, das dann automatisch auch als ihre 'upload'- und 'attr'-Passwörter gilt, ohne dass sie das getrennt setzen müssen. Wie mache ich das?%0a%0aA: Indem Sie [@$HandleAuth@] wie hier einrichten:%0a-> %25hlt php%25[@ $HandleAuth['upload'] = 'edit';%0a// Um u. a. eine WikiSandbox vorm Ändern ihres 'attr'-Rechts zu schützen außer durch den %0a// Admin (aber den Verfassern das Ändern ihrer eigenen Seiten/Gruppen zu erlauben)%0a// And to prevent a WikiSandbox from having it's 'attr' permissions changed %0a// except by the admin (but allowing editors to change it on their own pages/group)%0aif(($group=="Site") || ($group=="Main") || ($group=="Category") || %0a                       ($group=="SiteAdmin") || ($group=="PmWiki") ) {%0a          // setze 'attr' auf das 'admin'-Passwort für alle Main-Admin-Seiten %0a          $HandleAuth['attr'] = 'admin';  %0a} else { %0a          // Wer Bearbeiten kann, kann auch Attribute setzen%0a          $HandleAuth['attr'] = 'edit';  %0a}@]%0a[[#faqend]]%0a>>%3c%3c%0a
time=1654245807
title=Passwörter verwalten
