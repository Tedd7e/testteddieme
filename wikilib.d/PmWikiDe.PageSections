version=pmwiki-2.2.99 ordered=1 urlencoded=1
author=mfwolff
charset=UTF-8
csum=specified an anchor
ctime=1498549854
name=PmWikiDe.PageSections
rev=2
targets=PmWikiDe.Links,PmWikiDe.IncludeOtherPages,PmWikiDe.Functions,PmWikiDe.ConditionalMarkup
text=(:title Seitenabschnitte:)%0a(:Summary: Der PmWiki-interne Effekt von Ankern: Sie teilen die Seite in Abschnitte ein:)%0a(:Original_Page: PmWiki.PageSections:)%0a(:Translation_Date: 2017-06-27:)%0a(:Translation_Status: %25green%25fertig%25%25:)%0a(:Audience: Autoren:)%0a%0a(:comment Einführungsabschnitt dient als Links#anchors-Zusammenfassung:)%0a[[#sectionsintro]]\%0aWährend in HTML der Zweck der [[Links#anchors|Anker]] ist, eine Position im Text anzuspringen, dienen sie in PmWiki auch noch einem internen Zweck:%0aJeder Anker erzeugt auch einen ''Abschnitt'', denn Abschnitte sind definiert als Teil einer Seite zwischen ihrem Startanker und dem nächsten Anker.%0a[[#sectionsintro-end]]\%0aEin ''Abschnittname'' ist definiert als der Name seines Startankers.%0a%0a!! Einsatz%0a%0aDas Einsatzszenario für Abschnitte schließt ein:%0a%0a* [[Einfügen von Teile einer Seite -> IncludeOtherPages]] in einer anderen Seiten oder in ihr selbst,%0a* leichtes Abrufen von Teilen einer Seite in PHP mit Hilfe der @@[[(Functions#)RetrieveAuthSection]]()@@-Funktion,%0a* Wiederverwendung der Abschnitte als Vorlage mit [[Variablen als Parameter -> IncludeOtherPages#includevariable]] für dynamische Teile.%0a** In Blöcken mit [[conditional markup|bedingten Auszeichnungen]] können Sie die Interpretation des Markups verhindern, das gewöhnlich vor den Bedingungen geparsed wird. Ein Weg, das zu erreichen, ist, in die Mitte des Schlüsselworts des frühen Markups eine unechte Include-Variable einzufügen und es so zu ungültigem Müll zu machen. Wenn die Bedingungen auf Ihr Include-Kommando treffen, wird der Abschnitt mit dem deaktivierten Markup noch einmal interpretiert, jedoch erst, nachdem die Include-Variable ersetzt worden ist. Da ihre unechte Variable keinen Text enthält, verschwindet sie einfach, so das dieses Mal das frühe Markup nicht mehr ungültig ist.%0a%0a%25green%25Regeln für gültige Abschnittnamen%25%25 sind per Definition die gleichen wie die für Anker (beschrieben in [[Links#anchors|Anker]]), aber in der Praxis gibt es ein paar Einschränkungen:%0a%0a* Wenn der Name auf mehr als einen Punkt endet, können das @@([=:include:=])@@-Kommando und die @@[[(Functions#)RetrieveAuthSection]]()@@-Funktion ihn als Endanker, aber nicht als Startanker benutzen.%0a%0aSie können Experiment auf der [[(http://www.pmwiki.org/wiki/)Test.ExoticSectionNames]][=-=]Seite vornehmen, vielleicht nur mit deren Vorschau. %0a%0a%25red%25Seien Sie auf der Hut vor subtilen Unterschieden:%0a%0a* Wenn ein Anker in der Mitte einer Zeile als ''Startanker'' für das @@([=:include:=])@@-Kommando benutzt wird, wird der Abschnitt vom Beginn der Zeile an, die den Anker enthält, gelesen und fügt das @@[=[[#anchor]]=]@@-Markup ein, was dazu führt, dass ein HTML-Anker erzeugt wird.%0a* Im Vergleich dazu würde  @@[[(Functions#)RetrieveAuthSection]]()@@ mit dem Lesen exakt hinter dem Anker inmitten der Zeile beginnen.%0a* Beim Einsatz eines Anker in der Zeilenmitte als ''Endanker'' dagegen ist das Verhalten der Funktion @@[[(Functions#)RetrieveAuthSection]]()@@ genau wie das des @@([=:include:=])@@-Kommandos, vor dem in [[Include Other Pages|+]] gewarnt wird: Es hört mit dem Einlesen am Anfang der Zeile auf, die den Endanker enthält, sodass das letzte Zeichen das Zeilenendezeichen der Zeile ''vor'' dem Endanker ist.%0a** Um zu verhindern, dass das abschließende EOL hinter Ihrem @@([=:include:=])@@-Kommando Whitespace erzeugt, beenden Sie die Zeile vor dem Endanker mit einem Zeilenverbinder (Backslash "\").%0a%0a%0a%0a%0a
time=1499756832
title=Seitenabschnitte
