version=pmwiki-2.2.145 ordered=1 urlencoded=1
author=MFWolff
charset=UTF-8
csum=add links (+93)
ctime=1341410775
name=PmWikiDe.WYSIWYG
rev=8
targets=PmWikiDe.PmWiki,PmWikiDe.FCKEditor,Cookbook.WYSIWYGFundDrive,Cookbook.Worse,PmWikiDe.PMs,PmWikiDe.PmWikiPhilosophy,PmWikiDe.JavaScript,PmWikiDe.PmWikis,Profiles.Pm,PITS.00421,Category.Wysiwyg,Category.Wikiwyg,PmWikiDe.MediaWiki,PmWikiDe.GUIEditor
text=(:Summary: Unterstützt PmWiki eigentlich WYSIWYG?:)%0a(:Original_Page: PmWiki.{$Name}:)%0a(:Translation_Date: 2012-07-04:)%0a(:Translation_Status: %25green%25fertig%25%25:)%0a(:Audience: Administratoren:)%0a%0a'''Q: Unterstützt PmWiki irgend eine Art von WYSIWYG?'''%0a%0a'''Q: Hat jemand den FCKEditor in PmWiki integriert?'''%0a%0a'''17. Mai 2011:''' Eine [[Cookbook.WYSIWYG Fund Drive | Geldsammlung]] ist ins Leben gerufen worden, um die Kosten für die Erstellung von WYSIWYG-Fähigkeiten in PmWiki zu finanzieren. %0a%0a'''July 2017:''' Sehen Sie sich das Addon [[Cookbook/Worse|+]] an und probieren Sie es aus: {Cookbook.Worse$:Summary}%0a%0a%0a''PMs Antwort:''%0a%0a%0aDie kurze Antwort auf die Frage ist, dass WYSIWYG-Bearbeitung in großem Maße die Typen der Anpassungen reduziert, die man anstellen kann, und die Browser einschränkt, auf denen man Änderungen durchführen kann. Als solches tendiert sie dazu, stark gegen die [[PmWikiPhilosophy|PmWiki-Philosophie]] #5 zu gehen ("Sei einfach zu installieren, zu konfigurieren und zu pflegen.").%0a%0aDas haupsächliche Problem ist, das Browser beschränkt sind im Umfang, in dem sie WYSIWYG-Änderungen unterstützen können. Zum Beispiel sind die meisten Im-Browser-Editoren wie FCKEditor von Natur aus darauf beschränkt, nur die Markups zu behandeln, für deren Durchführung sie vorprogrammiert worden sind. Darüber hinaus führen diese Editoren ihre Änderungen direkt am HTML-Code aus und nicht an den Markups, die benutzt werden, um den HTML-Code zu produzieren. In anderen Worten, Im-Browser-Editoren benutzen HTML als ihr zugrunde liegendes Speicherformat.%0a%0aUnglücklicherweise bedeutet das, dass Leute mit Browsern, die kein JavaScript behandeln können, nur dann in der Lage sind, die Seiten zu pflegen, wenn sie HTML direkt ansehen und bearbeiten können. Das bedeutet auch, dass es unmöglich ist (oder wenigstens schon aus sich heraus schwierig), Markups zu behandeln, die keine direkte Entsprechung in HTML haben.%0a%0aEine Annäherung, die versucht wurde (mit wenig Erfolg), ist, dem Browser zu erlauben, den HTML-Quelltext direkt mit WYSIWYG zu ändern und dann anschließend zu versuchen, den HTML-Code wieder zurück zu übertragen auf Wiki-Markup-Code zur Speicherung und für das Bearbeiten mit Browsern ohne WYSIWYG-Fähigkeiten. Unglücklicherweise kann das nur für einen begrenzten Satz von Markups funktionieren und wird zu einem Albtraum, wenn wir Wiki-Administratoren erlauben wollten, eigene Markups zu entwickeln. (Mit anderen Worten, sag Goodbye zu den meisten Kochbuchrezepten.)%0a%0aIn der Theorie kann man eine Renderingmaschine in JavaScript schreiben, die on-the-fly Wiki-Markups in HTML übersetzt für die WYSIWYG-Anzeige während der Bearbeitung, aber ich kenne keinen, der das ernsthaft probiert hätte. Noch mal, es kann möglicherweise funktionieren, wenn der vollständige Satz von verfügbaren Markups bekannt ist, aber sowie die Möglichkeit der benutzerdefinierten Markup-Erweiterungen in das System eingeführt ist, wird die Komplexität riesig.%0a%0aDa die lokale Anpassung von Markups eine von PmWikis bedeutenden Stärken ist, schlägt das die Tür zum WYSIWYG-Ändern ziemlich feste zu, es sei denn, wir entscheiden benutzerdefinierte Markups zu verbieten, oder bis die Browsertechnologie so weit gediehen ist, dass es leichter ist, einen erweiterbaren WYSIWYG-Editor im Browser zu haben.%0a%0aAJAX zeigte einige Verheißungen, aber ich denke, dass WYSIWYG immer noch etwas unterhalb von dessen Reichweite ist, es sei denn, die Site hätte eine Menge Bandbreite, um die Renderinganfragen zu behandeln. Ich bin sehr fasziniert davon, was so etwas wie 'Writely' zu tun in der Lage sein könnte, aber ich denke, es ist begrenzt in seinem Potential zu benutzerdefinierten Anpassungen.%0a(Im Übrigen ist es auch keine gute Idee, hier Googles Fähigkeiten zu unterschätzen.)%0a%0aSeit PmWikis Einführung habe ich die grundsätzliche Einstellung eingenommen, dass die Segnungen des WYSIWYG-Bearbeitens, welche anerkennenswert sind, den Verlust an Flexibilität und an Fähigkeiten (wie benutzerdefinierte Markups und andere Punkte), den man hinnehmen müsste, nicht wert sind.%0a%0aUnd ich denke, dass die Tatsache, dass andere Web-Editing-Framworks fortfahren, die symbolischen Markups zu nutzen anstelle von WYSIWYG-Editoren, ein guter Indikator dafür ist, wie schwierig diese Aufgabe wirklich ist.%0a%0aOTOH, wenn mir irgend jemand eine Menge Geld bezahlen möchte dafür, dass ich das Problem in Angriff nehme, will ich sehen, was ich tun kann.  --[[~Pm]]%0a%0a----%0a"Be easy to install, configure, and maintain." HTML ist einfach, Wikisyntax ist es nicht.%0a%0aObwohl es eine vorherrschende Attitüde einiger ist, ist es doch in Wirklichkeit nicht wahr. HTML ist ein riesiger Sprachraum, mit Tonnen von Inkonsistenzen, der über lange Zeit von vielen Leuten entwickelt wurde, die es gut meinten, die aber mehr interessiert waren in ihren eigenen Zielen als daran, etwas "gesundes" herzustellen.%0a%0a----%0aSiehe auch [[http://pmichaud.com/pipermail/pmwiki-users/2003-August/001084.html | PMs Gedanken zu Markup-Auswahl]] (englisch).%0a%0a----%0a%0a* Siehe ''und stimme für'' [[PITS.00421]]%0a* Siehe [[Category.Wysiwyg]] und [[Category.Wikiwyg]]%0a* Wegen Beispielen siehe%0a** http://trac.xinha.org/%0a** [[http://www.dokuwiki.org/plugins?plugintag=wysiwyg#repotable | DokuWiki WYSIWYG plugins]]%0a** http://www.aloha-editor.org/%0a** [[http://www.solmetra.com/en/disp.php/en_products/en_spaw/en_spaw_about |SPAW Editor ]]%0a** http://wikiwig.sourceforge.net/%0a** http://unverse.net/Whizzywig-web-based-rich-text-editor%0a** http://whizzywing.com/ ([[https://github.com/unverse/Whizzywing/downloads|github]])%0a** http://prosemirror.net/%0a** http://editme.com/%0a** [[http://wiki.wordpress.org/WYSIWYG Plugin]]%0a** [[http://wiki.zoho.com/]]%0a** [[http://geniisoft.com/showcase.nsf/WebEditors |Große Liste von WYSIWYG-rich-text-web-Editoren]]%0a** [[http://info.webtoolhub.com/kb-a49-12-free-online-rich-text-editors-rte.aspx|12 Free Online Rich Text Editoren (RTE)]] eine weitere Liste%0a** [[http://ace.ajax.org/ | ACE]] (ehemals Bespin und Skywriter), [[(http://www.cdolivet.com/index.php?page=)editArea]] und [[http://codemirror.net/ |CodeMirror]] haben das Potential Wiki-Code hevorzuheben (highlightning)%0a** [[http://code.google.com/p/ittyeditor/ | Itty Editor]] scheint WYSIWYG in HTML zu erreichen, hat dann aber eine automatische 2-Wege-Konversion von/zu Markdown%0a* [[http://davidgerard.co.uk/notes/2011/01/04/|What you see is for the win]] - ein Artikel, der hervorhebt, dass das Hinzufügen eines WYSYWIG-Editors in die MediaWiki-Software eine '''achtfache''' Beteiligung bewirkt.%0a* [[http://www.mediawiki.org/wiki/Extension:InlineEditor|InlineEditor]] erlaubt das Bearbeiten von Sätzen, Abschnitten oder Vorlagen in einer Wikipedia-Seite.%0a* [[https://secure.wikimedia.org/wikipedia/commons/wiki/File:Parser_and_Editor_-_Haifa_2011.pdf | Editing 2.0 - MediaWiki's upcoming visual editor and the future of templates]] PDF-Präsentation eines MediaWiki-Entwicklers. Siehe auch [[http://test.community.wikia.com/wiki/Awesome_page?action=edit | Wikia RTE]]%0a* https://www.mediawiki.org/wiki/VisualEditor%0a* [[http://markitup.jaysalvat.com/home/|MarkItUp]], näher am GUIEditor denn am WYSYWIG, erlaubt Ajax-live-Vorschau%0aSiehe die Rezepte%0a(:pagelist group=Cookbook name=Wikiwyg,CodeMirror,Worse fmt=#titlesummary:)
time=1640245801
