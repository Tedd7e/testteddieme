version=pmwiki-2.3.23 ordered=1 urlencoded=1
author=MFWolff
charset=UTF-8
csum=Add InsertEditFunction() (+1187)
ctime=1305118943
name=PmWikiDe.UpdatePage
rev=13
targets=PmWikiDe.PageFileFormat,PmWikiDe.CustomMarkup,Cookbook.MarkupExpressionSamples,PmWikiDe.CustomActions,PmWikiDe.EditVariables,Category.UpdateMe,!UpdateMe,Cookbook.AutoCreatePages,PmWikiDe.BasicVariables,PmWikiDe.SimultaneousEdits,PmWikiDe.Functions,Category.PmWikiInternals,!PmWikiInternals,Category.PmWikiDeveloper,!PmWikiDeveloper
text=(:title UpdatePage:)%0a(:Summary: technische Hinweise zur Funktion UpdatePage():)%0a(:Original_Page: PmWiki.{$Name} :)%0a(:Translation_Date: 2011-05-11:)%0a(:Translation_Status: %25green%25fertig%25%25:)%0a(:Audience: Entwickler:)%0a%0aDiese Seite ist ein Sammlung technischer Anmerkungen und Hinweise bezüglich der Funktion UpdatePage(). Man kann die ganzen Informationen auch bekommen, indem man den Kode in pmwiki.php liest, aber diese Seite fasst die Dinge in einer etwas besser lesbaren Form zusammen.%0a%0aSie ist aktuell bis 2.2.0.beta65.%0a%0a!!%25hlt php%25 @@UpdatePage($editPageName, $old (page object), $new (page object));@@%0a%0a%25hlt php%25[@UpdatePage()@] erlaubt Kochbuchrezepten das Verhalten des Bearbeitens einer Seite in einem Browser nachzuahmen. Es nimmt ein Seitenobjekt (array) mit Seitendaten entgegen, dann führt es alle die üblichen PmWiki-Haushalts-Tätigkeiten durch, die abgearbeitet werden, wenn ein Text über ein Bearbeiten-Fenster  im Browser abgeschickt wird, als da sind history/diff-Informationen retten, Seitenrevisionsnummer hochzählen, @@RecentChanges@@-Seiten updaten, Email-Benachrichtigung senden etc.:%0a* "PageObjekt" bezieht sich auf ein Array, das mit %25hlt php%25[@RetrieveAuthPage($NameDerBearbeitetenSeite, $level, $authprompt=true, $since=0);@] (bevorzugt) oder mit [@ReadPage($Pagename)@] (missachtet die Sicherheit der Seite) geholt worden ist. Beachten Sie, dass @@$new['text']@@ alle Seiten-Daten für die neue Version des Textes enthalten sollte. Siehe [[PmWikiDe/PageFileFormat|+]] für weitere Informationen über den Typ der Informationen, die Sie über dieses Array erreichen.%0a* Wenn eine Seite nicht existiert, wird %25hlt php%25@@UpdatePage()@@ versuchen, sie anzulegen.%0a* Wenn Sie $old abgefragt haben, indem Sie %25hlt php%25@@RetrieveAuthPage($editPageName,$auth,$prompt,READPAGE_CURRENT)@@ benutzten und @@$new=$old@@ setzten, wird @@UpdatePage()@@ oder @@WritePage()@@ auch alle Versionsdaten löschen (weil READPAGE_CURRENT nur die aktuelle Version der Seite liest und zurückgibt ohne jegliche Versionen; das Gleiche passiert mit [@ReadPage($pagename, READPAGE_CURRENT)@]). %0a%0a!!!Vorsicht%0aInkorrekt benutzt kann %25hlt php%25[@UpdatePage()@] nicht nur Seiteninhalte löschen, sondern kann auch den kompletten Verlauf (alle Versionen) einer Seite vernichten &ndash; PmWiki kann eine ältere Version nicht wiederherstellen, wenn Sie versehentlich den Verlauf beim Lesen oder Speichern einer Seite fallen lassen.%0a%0a!!! Aufruf von %25hlt php%25[@UpdatePage()@]%0a%0a%25hlt php%25@@UpdatePage()@@%25%25 kann nicht von ''@@config.php@@'' oder einem eingefügten ([@include()@]d) Rezept direkt aufgerufen werden, weil es notwendige Initialisierungen gibt, die erst später in ''config.php'' erscheinen. Wenn Sie %25hlt php%25@@UpdatePage()@@ benutzen, dann innerhalb von [[PmWikiDe/CustomMarkup | eigenen Auszeichnungen]], eines [[Cookbook:MarkupExpressionSamples | eigenen Markup-Ausdrucks]] oder einer [[PmWikiDe/CustomActions | eigenen Aktion]].%0a%0a%25hlt php%25[@UpdatePage()@]%25%25 macht selbst nicht viel außer $EditFunctions zu traversieren und jede darin enthaltene Funktion aufzurufen. ($EditFunctions kann überschrieben werden durch ein viertes Argument [@$fnlist@], aber das ist ziemlich selten).  %0a%0aDie globale Variable @@$IsPagePosted@@ wird zum Start von %25hlt php%25@@UpdatePage()@@ auf FALSE gesetzt und dann am Ende dieser Funktion zurückgegeben. %0aJede der eingreifenden Funktionen kann sie auf TRUE setzten (um anzuzeigen, dass das Veröffentlichen/Speichern erfolgreich war), aber normalerweise ist das der Job der Funktion PostPage().%0a%0aDie globale Variable @@$EnablePost@@ wird am Beginn von pmwiki.php auf @@1@@ gesetzt und kann jederzeit vor PostPage() auf @@0@@ oder @@false@@ geändert werden, wodurch die meisten Bearbeitenfunktionen (EditFunktions) am Fortfahren gehindert werden und die Seite wird dann auch nicht gespeichert.%0a%0aThe global @@$EnablePost@@ is set to @@1@@ at the start of pmwiki.php, and can be changed to @@0@@ or @@false@@ at any time before PostPage() which would block most EditFunctions from proceeding, and the page will not be saved.%0a%0a%0aHier ist die Definition von  $EditFunctions aus @@pmwiki.php@@:%0a%0a%25hlt php%25[@$EditFunctions = array('EditTemplate', 'RestorePage', 'ReplaceOnSave',%0a  'SaveAttributes', 'PostPage', 'PostRecentChanges', 'AutoCreateTargets',%0a  'PreviewPage');@]%0a%0a''Es gibt seit 2.3.x. weitere Funktionen [[!UpdateMe]].''%0a%0a!!!Rezepte ändern, wie Bearbeiten wirkt%0a%0aKochbuchautoren können ihre eigenen Funktionen zu $EditFunctions hinzufügen, wenn sie welche benötigen.%0a%0aNehmen Sie zum Beispiel einmal an, Sie müssen aus bestimmtem Gründen den Seitennamen ([@$pagename@]) der gerade bearbeiteten Seite wissen (Mag sein, Sie haben [@$ROSPatterns@] erweitert):%0a%0a%25hlt php%25[@%0a  InsertEditFunction('GetEditPagename', '%3c'); # am Beginn anfügen%0a  # oder möglicherweise: array_unshift($EditFunctions, "GetEditPagename");%0a  %0a  function GetEditPagename($pagename, $p, $n) {%0a    global $EditPagename;%0a    $EditPagename=$pagename;%0a  }%0a@]%0a%0aOder Sie müssen noch etwas abarbeiten, nachdem eine Seite gespeichert wurde:%0a%0a%25hlt php%25[@%0a  InsertEditFunction('MyPostEditProcessing', '>'); // Anfügen ans Ende von $EditFunctions%0a  # oder möglicherweise: $EditFunctions[]= "MyPostEditProcessing";%0a  %0a  function MyPostEditProcessing($pagename, $p, $n) {%0a    // Seite auf eine andere Site spiegeln, E-Mail senden, irgendwo Seitenlisten updaten, etc%0a    // Könnte global $EnablePost und $IsPagePosted prüfen%0a  }%0a@]%0a%0aOder Sie müssen noch letzte Überprüfungen machen, kurz bevor die Seite im Dateisystem gespeichert wird:%0a%0a%25hlt php%25[@%0a  InsertEditFunction('MyLastChecks', '%3cPostPage'); // genau vor PostPage()%0a  # oder möglicherweise: array_splice($EditFunctions, array_search('PostPage', $EditFunctions), 0, 'MyLastChecks');%0a  %0a  function MyLastChecks($pagename, $p, $n) {%0a    global $EnablePost;%0a    if(! $EnablePost) return;%0a    %0a    // tue etwas%0a  }%0a@]%0a%0a!!Standardfunktionen von $EditFunctions%0a%0a!!! EditTemplate%0a%0aDiese Funktion erlaubt neue Seiten mit dem Inhalt einer Vorlagenseite vorzubelegen. Wenn der @@$new['text']@@ irgendetwas enthält, tut diese Funktion nichts. %0a%0aDer Seitenname der Vorlage kann in %25hlt php%25[@$_REQUEST['template']@] übergeben werden.%0a%0aAndernfalls wird das [@$EditTemplatesFmt@]-Array traversiert und jede Seite gelesen bis ein Text aufgetrieben wird, der dann der Text für @@$new['text']@@ wird.%0a%0a%0a!!! RestorePage%0a%0aBeim normalen Speichern einer Seite macht diese Funktion nichts.%0a%0aDer Wert für [@$Restore@] kann als Argument an die Funktion übergeben werden, aber das passiert nicht im Kontext von %25hlt php%25@@UpdatePage()@@. Der Wert wird vielmehr von [@$_REQUEST['restore']@] geholt. Wenn dieser Wert nicht gesetzt ist, dann macht die Funktion nichts. Wenn der Wert auf einen Zeitstempel gesetzt ist, wird die PageHistory traversiert und die Seitenänderungen werden in umgekehrter Reihenfolge rückgängig gemacht, bis der übergebenen Zeitstempel erreicht ist. %0a%0a%0a!!! ReplaceOnSave%0a%0aEs gibt zwei Arrays:  [@$ROEPatterns@] und [@$ROSPatterns@]. In jedem Array ist der Schlüssel dieser assoziativen Arrays das Suchmuster und der assoziierte Wert ist der Ersatz dafür. [@$ROEPatterns@] wird bei jeder Bearbeitung ersetzt, [@$ROSPatterns@] nur wenn [@$EnablePost@] gesetzt ist.%0a%0a%0a!!! SaveAttributes%0a%0aMehrere unterschiedliche Attribute werden berechnet als neue Schlüssel für das @@$new[]@@-Seiten-Array. (Jedes davon wird dann zu einer eigenen Zeile in der Seitendatei (siehe [[PageFileFormat|+]]). "Targets" wird zusammengestellt als leerzeichenseparierte Liste von Seiten, auf die von dieser Seite verwiesen wird. Eigenschaften, die in der globalen Variablen [@$SaveProperties@] gehalten werden, werden aus dem @@$page[]@@ (old page)-Array kopiert.  %0a%0a* '''Anmerkung:''' [@SaveAttributes@] ruft %25hlt php%25[@MarkupToHTML()@] für den Seitentext auf. Das setzt Seitenvariablen, kann aber Seiteneffekte haben (wenn Sie einen Zähler für Ihr Markup pflegen, die jedesmal in Dateien schreibt, wenn eine Seite angesehen wurde, etc.).%0a %0a!!! PostPage%0a%0a[@$IsPagePosted@] wird auf FALSE gesetzt.%0a%0aWenn [@$EnablePost@] wahr ist, dann ereignen sich folgende Schritte:%0a* Attribute wie 'charset' ([@$Charset@]), 'author' ([@$Author@]), 'author:%3ctimestamp>' ([@$Author@]), und 'host:%3ctimestamp>' (%25hlt php%25[@$_SERVER['REMOTE_ADDR']@]) werden gesetzt.%0a* Ein 'diff' wird bestimmt zwischen dem vorherigen und dem neuen Text und das Ergebnis wird gespeichert als ein '%3ctimestamp>'-Schlüssel.%0a* Wenn der Text auf die globale Variable [@$DeleteKeyPattern@] passt, wird die Seite gelöscht.%0a* %25hlt php%25@@WritePage()@@ wird aufgerufen.%0a* [@$IsPagePosted@] wird auf TRUE gesetzt.%0a%0a%0a!!! PostRecentChanges%0a%0aWenn [@$IsPagePosted@] NICHT TRUE ist, dann tue nichts.%0a%0aDas globale Array %25hlt php%25[@$RecentChangesFmt[]@] wird traversiert, wobei der Schlüssel zum assoziativen Array der Name der Seite ist, in die die Änderung eingetragen werden soll, und der assoziierte Wert der Text ist, der in die Seite am Ende einzutragen ist.  %0a%0aWenn die Zeilenzahl in der RecentChanges-Seite den Wert der globalen Variable [@$RCLinesMax@] übersteigt, wird die Seite angemessen gekürzt. %0a%0aDie RecentChanges-Seite wird per %25hlt php%25@@WritePage()@@ geschrieben.%0a%0a%0a!!! AutoCreateTargets%0a%0aWenn Verweisziele in der Seite auf bestimmte Globale passen und die Ziele existieren noch nicht, werden sie automatisch angelegt. Siehe auch [[(Cookbook:)AutoCreatePages]].%0a%0a%0a!!! PreviewPage%0a%0aDiese Funktion tut nichts, wenn Sie keine Vorschau machen.%0a%0a!! Weitere Funktionen von [@$EditFunctions@]%0a%0aEs gibt noch weitere Funktionen von $EditFunctions in PmWiki, sie sind aber nicht Teil der Basisfunktionalität:%0a%0a!!! author.php%0a%0a%25hlt php%25[@ array_unshift($EditFunctions,'RequireAuthor'); @]// Stellt sicher, dass der Autor gesetzt ist, bevor die Seite bearbeitet werden darf.%0a%0a!!! blocklist.php%0a%0a%25hlt php%25[@ array_unshift($EditFunctions, 'CheckBlocklist'); @]%0a%0a!!! draft.php%0a%0a%25hlt php%25[@ array_unshift($EditFunctions, 'EditDraft'); @] // Prüfe, ob im Entwurf gespeichert wird und wenn, ändere Namen und leite um zur Entwurfseite für die weitere Bearbeitung.%0a%0a* '''Anmerkung''': Dies kann den Seitennamen $pagename unerwartet ändern.%0a%0a!!! notify.php%0a%0a%25hlt php%25[@ $EditFunctions[] = 'PostNotify'; @] // Füge 'PostNotify' hinzu um eine E-Mail zu versenden, wenn die Bearbeitung erfolgreich abgeschlossen ist.%0a%0a!!! pagelist.php%0a%0a%25hlt php%25[@ $EditFunctions[] = 'PostPageIndex'; @] // behandle %25pmhlt%25[@(:pagelist:)@]-Funktionalität, nachdem eine Seite geändert wurde.%0a%0a!!! simuledit.php%0a%0a%25hlt php%25[@ array_unshift($EditFunctions,'MergeSimulEdits'); @] // Wenn mehr als eine Bearbeitung seit dem Laden der Seite erfolgte, pflege die Änderungen ein, bevor die Seite gespeichert wird.%0a* Siehe [[PmWikiDe/SimultaneousEdits|+]]%0a%0a!!! transition.php%0a%0aBehandelt Übergänge zwischen Versionen. Wird für 'GUI Edit buttons' genutzt.%0a%0a!!! urlapprove.php%0a%0a%25hlt php%25[@ array_splice($EditFunctions, array_search('PostPage', $EditFunctions), 0, 'BlockUnapprovedPosts'); @]%0a%0aSetzt die %25hlt php%25[@BlockUnapprovedPosts()@]-Funktion direkt vor [@PostPage()@]%0a%0a----%0a%0a!! Hinweise%0a%0a!!!!! Kann ich %25hlt php%25@@UpdatePage()@@ direkt in der ''config.php''-Datei aufrufen?%0aNein. Wie schon bei den [[PmWikiDe/Functions | Funktionen]] festgestellt: %25hlt php%25@@UpdatePage()@@%25%25 kann nicht direkt in ''config.php'' aufgerufen werden, weil es notwendige Initialisierungen gibt, die erst später passieren in ''pmwiki.php''. Es reicht nicht, nur ''stdconfig.php'' zu laden. Wenn Sie %25hlt php%25@@UpdatePage()@@%25%25 benutzen wollen, müssen Sie es innerhalb eines [[PmWikiDe/CustomMarkup | eigenen Markups]], eines [[Cookbook:MarkupExpressionSamples | 'custom markup expression']] oder einer [[PmWikiDe/CustomActions | eigenen Aktion]] tun.%0a%0a----%0a%0aKategorien: [[!PmWiki Internals]] [[!PmWiki Developer]]%0a
time=1684575500
title=UpdatePage
