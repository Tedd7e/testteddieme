version=pmwiki-2.3.13 ordered=1 urlencoded=1
author=MFWolff
charset=UTF-8
csum=%25L, note about undefined formats into WikiStyles (+445)
ctime=1206004221
name=PmWikiDe.MarkupExpressions
rev=28
targets=Cookbook.LocalTimes,PmWikiDe.WikiStyles,PmWikiDe.BasicVariables,PmWikiDe.PageListTemplates,PmWikiDe.PageLists,PmWikiDe.ConditionalMarkup,Cookbook.MarkupExpressionSamples,Cookbook.MarkupExprPlus
text=(:title: Formatierungsanweisungen im Ausdruck:)%0a(:Summary: String-Operationen und Formatierungsfunktionen werden innerhalb von Markups angewendet:)%0a(:Original_Page: PmWiki.{$Name}:)%0a(:Translation_Date: 2011-04-29:)%0a(:Translation_Status: %25green%25fertig%25%25:)%0a(:Audience: Autoren (Fortgeschrittene):)%0a%0aDer [@{(...)}@]-"Formatierungsausdruck" erlaubt es, eine Reihe von String- und Formatierungsanweisungen innnerhalb eines Markups auszuführen. Die Anweisungen, die laut diesem Rezept definiert werden, schließen ''[[#substr|substr]]'', ''[[#ftime|ftime]]'', ''[[#strlen|strlen]]'', ''[[#rand|rand]]'', ''[[#mod|mod]]'', ''[[#to|toupper / tolower]]'', ''[[#ucfirst|ucfirst]]'', ''[[#ucwords|ucwords]]'', ''[[#pagename|pagename]]'' und ''[[#asspaced|asspaced]]'' ein. Markups können verschachtelt werden, indem man das Markup {(...(...)...)} benutzt.%0a%0a[[#substr]]%0a!! ''substr''%0a%0aDer ''substr''-Ausdruck schneidet Teile aus einem String heraus. Die Argumente werden durch Leerzeichen getrennt. Es sind%0a# der zu bearbeitende String &ndash; setzen Sie den String immer in Anführungszeichen,%0a# die Startposition des Teilstrings im String &ndash; beachten Sie, dass diese Startposition auf null basiert (d.&nbsp;h. das erste Zeichen im String hat die Nummer "0"),%0a# die Zahl der herauszuziehenden Zeichen.%0a%0aBeispiele:%0a(:markup class="horiz":)%0a {(substr "PmWiki" 2 3)}%0a {(substr "PmWiki" 2)}%0a {(substr "{*$Group}" 2)}%0a {(substr "PmWiki" 0 1)}%0a {(substr "PmWiki" 0 -3)}%0a {(substr "PmWiki" -3)}%0a {$:title}%0a {(substr "{$:title}" 7 11)}%0a(:markupend:)%0a%0aUm die letzten ''n'' Zeichen aus einem String herauszuschneiden, verwenden Sie %25pmhlt%25[@{(substr "string" -n)}@]%0a[[%3c%3c]]%0aUm die letzten ''n'' Zeichen vom String abzuschneiden, verwenden Sie %25pmhlt%25[@{(substr "string" 0 -n)}@]%0a[[%3c%3c]]%0aUm alle Zeichen ab dem ''n''. Zeichen zu erhalten, lassen Sie den dritten Parameter weg: %25pmhlt%25[@{(substr "string" n)}@]%0a%0a[[#ftime]]%0a!! ''ftime''%0a%0a''ftime''-Ausdrücke dienen der Formatierung von Datum und Zeit. Das allgemeine Format ist%0a%0a->%25pmhlt%25[@{(ftime "fmt" "when")}@]%0a->%25pmhlt%25[@{(ftime fmt="fmt" when="when" tz="tz" locale="locale")}@]%0a%0aworin "fmt" ein Formatstring und "when" die zu formatierende Zeit ist. Die Argumente können in beiden Reihenfolgen geschrieben werden und können die optionalen Labels "fmt=" und "when=" nutzen.%0a%0aDas "tz"-Argument (time zone, Zeitzone) erlaubt das Setzen einer anderen Zeitzone, wenn auch nur in Installationen, die PHP 5.1 oder neuer nutzen. Siehe [[https://php.net/timezones|die Liste der unterstützten Zeitzonen]], Argumente, die dort nicht zu finden sind, werden stillschweigend ignoriert.%0a%0aDas "locale"-Argument (language locale, lokale Sprache) erlaubt, das Zeitformat mit Wochentagen und Monaten in einer anderen Sprache auszugeben, sofern diese lokale Sprache auf dem Server verfügbar ist. Sie können mehrere "locale" zum Durchprobieren angeben, getrennt durch Kommata oder Leerzeichen, z.&nbsp;B. "fr_FR.utf8,fr_FR,fr". Wenn keine der gelisteten "locale" verfügbar ist, wird das Argument stillschweigend ignoriert.%0a%0aWenn Sie bei internationalen "locale"-Einstellungen seltsame Zeichen sehen, versuchen Sie den ".uft8"- oder "UTF-8"-Teil hinzuzufügen oder wegzulassen, d.&nbsp;h. versuchen sie Beides &ndash; "fr_FR.utf8" und "fr_FR" &ndash; um zu sehen, welches bei Ihnen funktioniert. Wikis mit aktiviertem UTF-8 werden eher den ".utf8"-Teil brauchen.%0a%0aBeispiele:%0a(:markup class="horiz":)%0a {(ftime)}%0a {(ftime fmt="%25F %25H:%25M")}%0a {(ftime %25Y)}%0a {(ftime fmt=%25T)}%0a {(ftime when=tomorrow)}%0a {(ftime fmt="%25Y-%25m-%25d" yesterday)}%0a {(ftime "+1 week" %25F)}%0a {(ftime fmt=%25D "-4 month")}%0a {(ftime fmt="%25a%25e %25b" "next week")}%0a {$LastModifiedTime}%0a {(ftime "%25F" "@{$LastModifiedTime}")}%0a {(ftime fmt="%25A, %25d %25B %25Y, %25Hh%25M" locale=fr_FR.utf8 tz=Europe/Paris)}%0a {(ftime fmt="%25A, %25d. %25B %25Y, %25H Uhr %25M" locale=de_DE.utf8 tz=Europe/Berlin)}%0a {(ftime locale=de_DE.utf8 tz=Europe/Berlin)}%0a%0a(:markupend:)%0a%0aDer "fmt"-Parameter ist das, was auf ''fmt='' folgt, oder ein String, dessen erstes Zeichen ein '%25' ist oder sonst der Standard der Site (z.&nbsp;B. festgelegt in config.php). Die Formatkodes sind beschrieben in  %25newwin%25 https://www.php.net/manual/de/function.strftime.php. In Ergänzung dazu ergibt '[=%25o=]' die Endung einer Ordnungszahl ("st" für 1st), '[=%25F=]' ein ISO-8601-Datum wie 2022-10-30, [='%25s'=] einen UNIX-Zeitstempel (Sekunden seit 1.1.1970) und '[=%25L=]' erzeugt ein Format wie %25pmhlt%25[@@2022-10-30T01:27:34Z@], welches in der Zeitzone des Besuchers per Cookbook:LocalTimes angezeigt werden kann. %0a%0aEinige gebräuchliche Formatstrings sind:%0a%0a    [= %25F            =]      # ISO-8601-Datum         "{(ftime %25F)}"%0a    [= %25s            =]      # Unix-Zeitstempel       "{(ftime %25s)}"%0a    [= %25H:%25M:%25S      =]      # Zeit als hh:mm:ss      "{(ftime %25H:%25M:%25S)}"%0a    [= %25m/%25d/%25Y      =]      # Datum als mm/dd/yyyy   "{(ftime %25m/%25d/%25Y)}"%0a    [= "%25A, %25B %25e%25o, %25Y" =]  # in Worten              "{(ftime "%25A, %25B %25e%25o, %25Y")}"%0a    [= "%25A, %25d. %25B %25Y" =]    # in Worten (alternativ) "{(ftime "%25A, %25d. %25B %25Y")}"%0a%0aBeachten Sie, dass, wenn Sie einen undefinierten Formatstring wie [@%25q@] oder [@%25E@] verwenden, dieser von ''@@ftime@@'' unverändert gelassen bleibt, später aber von PmWiki als [[WikiStyle(s)|Wikistil]] verarbeitet werden könnte, was womöglich unerwartet kommt.%0a%0aDer "when"-Parameter versteht viele verschiedene Datums%25newwin%25[[https://php.net/manual/de/datetime.formats.php|formate]]. Der "when"-Parameter ist das, was auf ''when='' folgt oder was nach dem Erkennen des Formatparameters übrigbleibt. Einige Beispiele:%0a%0a    2007-04-11            # ISO-8601-Datum%0a    20070411              # Datum ohne Bindestriche, Schrägstriche oder Punkte%0a    2007-03               # Monat%0a    @1176304315           # Unix-Zeitstempel (Sekunden seit 1-Jan-1970 00:00 UTC)%0a    now                   # Die aktuelle Zeit%0a    today                 # heute um 00:00:00 Uhr%0a    yesterday             # gestern um 00:00:00 Uhr%0a    "next Monday"         # relatives Datum%0a    "last Thursday"       # relatives Datum%0a    "-3 days"             # vor drei Tagen%0a    "+2 weeks"            # in zwei Wochen ab jetzt%0a%0a'''Anmerkung:''' Wenn Sie einen Unix-Zeitstempel umwandeln wollen, '''müssen''' Sie ein '@' voranstellen, also%0a: :%25pmhlt%25[@{(ftime "%25A, %25B %25d, %25Y" @1231116927)}@],%0aauch wenn die Zeit aus einer Variablen stammt, wie hier:%0a: :%25pmhlt%25[@{(ftime "%25F" "@{$LastModifiedTime}")}@].%0a%0aDer "when"-Parameter nutzt PHPs %25newwin%25[[(https://www.php.net/)strtotime]]-Funktion, um Datumstrings gemäß des GNU-%0a[[https://www.gnu.org/software/tar/manual/html_node/Date-input-formats.html|Datum-Eingabe-Format]]s umzuwandeln; diese Funktion versteht nur englische Phrasen in Datumsangaben.%0a%0aDie Variable $FTimeFmt kann eingesetzt werden, um das Standarddatumformat, das von "ftime" benutzt wird, zu überschreiben. Der Standard für $FTimeFmt ist $TimeFmt. %0a%0aEin ungültiger "when"-Parameter evaluiert zu @000000, also 01.01.1970 00:00Uhr.%0a%0a[[#strlen]]%0a!! ''strlen''%0a%0aDer ''strlen''-Ausdruck gibt die Länge des Strings zurück. Das Argument ist der nachzumessende String. Das Argument muss in Anführungszeichen gesetzt sein, auch wenn es kein literaler String ist.%0a%0a(:markup class="horiz":)%0a {$:title}%0a {(strlen "{$:title}")}%0a(:markupend:)%0a%0a[[#rand]]%0a!! ''rand''%0a%0aDer ''rand''-Ausdruck liefert eine Zufallszahl aus dem Bereich der ganzen Zahlen. Das erste Argument bezeichnet die kleinste Zahl, die zurückgegeben werden soll, das zweite Argument bezeichnet die größte Zahl, die zurückgegeben werden soll. Ohne Argumente erhält man eine Zahl zwischen 0 und RAND_MAX (Es heißt, die sei 2147483647, die Hälfte der größten Integerzahl. Es ist aber vom Betriebssystem abhängig, wie groß diese Zahl letztendlich ist). \\%0aWenn man z.&nbsp;B. eine Zufallszahl zwischen -5 und 15 (einschließlich) erhalten möchte, schreibt man (rand -5 15)    %0a%0a(:markup class="horiz":)%0a {(rand)}%0a {(rand -5 0)}%0a(:markupend:)%0a%0a[[#mod]]%0a!! ''mod''%0a%0aDer erweiterte "mod"-Ausdruck gibt den Modulo (Divisionsrest) einer Division zweier Zahlen zurück. Es kann in erweiterten [[PageList templates|+]] zusammen mit [@{$$PageCount}@] genutzt werden, um Markups in jedem (modulo) Eintrag einzufügen, z.&nbsp;B. um alternierende (Zebra-)Tabellenzeilen zu erzeugen oder um einen Zeilenumbruch einzufügen. (Siehe auch [[PageLists]], [[WikiStyles]] and [[ConditionalMarkup]].)%0a%0a(:markup class="horiz":)[@%0a>>comment%3c%3c%0a%25define=bg1 item bgcolor=#f88%25%0a%25define=bg2 item bgcolor=#ff8%25%0a%25define=bg0 item bgcolor=#8f8%25[=%0a[[#altrows]]%0a* %25bg{(mod {$$PageCount} 3)}%25 {=$Name} ({$$PageCount})%0a[[#altrowsend]]=]%0a>>%3c%3c%0a(:pagelist fmt=#altrows group=PmWiki count=10:)%0a@]%0a%0a%0a[[#to]]%0a!! ''toupper'' / ''tolower''%0a%0aDer ''toupper''- und der ''tolower''-Ausdruck wandeln einen String in Groß- bzw. Kleinbuchstaben um. Das Argument ist der umzuwandelnde String.%0a%0a(:markup class="horiz":)%0a {(toupper "{$:title}")}%0a {(tolower "{$:title}")}%0a(:markupend:)%0a%0a[[#ucfirst]]%0a!!''ucfirst''%0a%0aDer ''ucfirst''-Ausdruck wandelt das erste Zeichen des Strings in einen Großbuchstaben um, wenn es ein Buchstabe ist. Das Argument ist der umzuwandelnde String. %0a%0a(:markup class="horiz":)%0a {(ucfirst "hund, katze, maus")}%0a {(ucfirst "123hundert")}%0a(:markupend:)%0a%0a[[#ucwords]]%0a!! ''ucwords''%0a%0aDer ''ucwords''-Ausdruck wandelt den ersten Buchstaben jeden Wortes in dem String in einen Großbuchstaben um (eigentlich des erste Zeichen und jedes Zeichen nach einem Leerzeichen, wenn es denn ein Buchstabe ist). Das Argument ist der umzuwandelnde String.%0a%0a(:markup class="horiz":)%0a {(ucwords "hunde und katzen")}%0a {(ucwords "hund, katze, maus")}%0a(:markupend:)%0a%0a[[#pagename]]%0a!! ''pagename''%0a%0aDer ''pagename''-Ausdruck bildet einen Seitennamen aus einem String. Der Seitenname eignet sich als Name zum Speichern, ist in WikiWordSchreibweise geschrieben und enthält keine für Dateisysteme verbotenen Zeichen und keine Leerzeichen mehr. Das Argument ist der umzuwandelnde String.%0a%0a(:markup class="horiz":)%0a {(pagename "ein \ Back-slash, ein Forward-slash /")}%0a {(pagename "{$:title}")}%0a(:markupend:)%0a%0a[[#asspaced]]%0a!! ''asspaced''%0a%0aDer ''asspaced''-Ausdruck zerlegt WikiWörter, indem es Leerzeichen vor Großbuchstaben einfügt. Das Argument ist der umzuwandelnde String.%0a%0a(:markup class="horiz":)%0a {$FullName}%0a {(asspaced "{$FullName}")}%0a(:markupend:)%0a%0a[[#nesting]]%0a!! Verschachteln von Ausdrücken%0a%0aDie hier beschriebenen Ausdrücke können verschachtelt werden.%0a%0a(:markup class="horiz":)%0a {(tolower (substr "Hello World" 2))}%0a(:markupend:)%0a%0aDer innere Ausdruck darf nicht mehr von geschweiften Klammern umgeben sein. Das Setzen von Anführungszeichen ist eine diffizile Angelegenheit.%0a%0a[[#notes]]    %0a!! Anmerkungen%0a* In PmWikis der Version 2.2.33 oder älter funktionieren womöglich einige der stringbearbeitenden Ausdrücke nicht sauber mit Multibyte-UTF-8-Zeichen. Neuere Versionen sollten gut funktionieren.%0a%0a* Der "ftime"-Ausdruck funktioniert nicht mit einigen [[https://mcs.vuw.ac.nz/technical/software/SGML/doc/iso8601/ISO8601.html | ISO 8601]]-Daten (weil die Zeit 24:00 ungültig ist).%0a(:markup class=horiz:)%0a {(ftime fmt="%25m/%25d/%25Y @ %25H:%25M:%25S" when="20070626T2400")}%0a {(ftime fmt="%25H:%25M:%25S" when="20070626T2400")}%0a(:markupend:)%0a* Es ist möglich, die Zeit in einer anderen [[https://gnu.org/software/tar/manual/html_node/tar_122.html#SEC122 | Zeitzone]] anzuzeigen.%0a(:markup class=horiz:)%0a 1 {(ftime when='Europe/Berlin')}%0a 2 {(ftime when='Europe/London')}%0a 3 {(ftime when='Europe/London +2 days')}%0a 4 {(ftime when="Europe/London 20041031T0820")}%0a 5 {(ftime "%25F %25H:%25M" 'Pacific/Auckland now')}%0a(:markupend:)%0a%0a!! Siehe auch%0a(:pagelist group=PmWikiDe name=PageVariables,PageTextVariables,ConditionalMarkup fmt=#titlesummary:)%0a* Cookbook:MarkupExpressionSamples &ndash; '-custom markup expression samples (englisch)-' %0a* Cookbook:MarkupExprPlus - [-{Cookbook/MarkupExprPlus$:Summary} (englisch)-]%0a
time=1667130203
title=Formatierungsanweisungen im Ausdruck
