version=pmwiki-2.2.145 ordered=1 urlencoded=1
author=11
charset=UTF-8
csum=
ctime=1141602886
name=PmWiki.ThoughtsOnAccessControl
rev=17
targets=PmWiki.AuthUser,!UpdateMe,Category.UpdateMe
text=!! User-based authentication%0a!!![[AuthUser]]%0aPm, please complete ... thank you.%0a%0a!!!UserAuth%0aWhat is this?  How is it different than AuthUser?%0a%0a!! Password-based authentication%0aPm, please comment ....%0aWhy is this easier to maintain for administrators?  %0aAt a glance, it seems AuthUser is easier for authors? %0a%0aAnswer: With accounts you should create one account per user accessing the site, then organize them in groups, give the groups permissions and so on. If you have lots of editors then of course this is more work than simply sending an email with a password in it. The drawback is that if one of the users starts misbehaving you must redistribute new passwords to everybody rather than simply disabling one account.%0a%0aOf course it is possible to emulate a passwords-based approach with a user approach by everybody using the same account, but why distribute two tokens (the username everybody use and the password everybody use) when there one will suffice? If you only have people share user accounts, the two are logically equivalent so of course...%0a%0a!!!Drawbacks%0aPm, please comment ...%0aIt is difficult to remember all the commands for "passwords" based system, e.g. clear, @lock, @nopass, ?add=attr, adds headache.%0a%0a(mgb) the way PmWiki is currently set up (for example, using AuthUser), it is painful to administer access control either with user accounts or with passwords only. That's because users can't easily maintain their own account/passwords. The administrator basically has to do everything. If a user loses a password or wants to change it, the administrator has to take care of it. It would be nice to have a true user account management system built in (perhaps another cookbook?), and for the wiki to use this method to this if a flag is turned on.%0a%0a!!!Advantages%0aPm, please comment ....%0a%0a!!!Things Visitors Wish For%0a* I'd like to be able to log in and log out as the admin and not let anyone else edit.%0a** Why?%0a*** So I can use PmWiki as a CMS system, too and not just as a Wiki.%0a*** Seconded; example: would like for teachers to be able to log out after editing their pages, so that students can't come along to their computer & muck with their work when their backs are turned.%0a** How?%0a*** Using an "if" statement a "skin," it's possible to hide all the edit, history, etc, links.%0a*** Then, once I, as the admin, log in, I would see all those, but regular visitors wouldn't.%0a%0a%0a[[!UpdateMe]]
time=1640242085
