version=pmwiki-2.3.9 ordered=1 urlencoded=1
author=simon
charset=UTF-8
csum=hlt php (+49)
ctime=1238442342
name=PmWiki.CustomActions
rev=39
targets=PmWiki.CustomActions,PmWiki.AvailableActions,PmWiki.CustomMarkup,PmWiki.Functions,Category.PmWikiDeveloper,!PmWikiDeveloper
text=(:title Custom Actions:)%0a(:Summary: Make PmWiki respond to custom values for url parameter ?action=...:)%0a(:Audience: administrators (intermediate) :)%0aWith cookbook recipes, it is possible to define [[PmWiki/AvailableActions|custom page actions]] for PmWiki. The correspondent code is executed whenever a parameter [@action@] is present in the wiki URL like in this made-up example:  %0a%0a->[@[[MyGroup/MyPage@]@@'''?action=myaction''']]@@ %0a%0aWith such an action, you can alter the display and treatment of the current page - like in standard actions as [[PmWiki/CustomActions?action=edit|[@edit@]]] or [[PmWiki/CustomActions?action=print|[@print@]]]. Or you can manipulate many wiki pages at once or perform global tasks, such as changing the saved mark-up of all pages in that group (beware!) or collecting data from all pages in the wiki. So depending on your code, it may not even matter to which page URL the action parameter is appended, like with standard action [[PmWiki/CustomActions?action=phpinfo|[@phpinfo@]]].%0a%0aWhereas a [[Custom Markup]] is primarily intended to generate a meaningful text replacement on the current page, a page action is triggered by a url parameter and thus can be used in links as a call to a PHP function, acting on the current page or wiki wide, for instance like:%0a%0a(:markup:) [=%0a[[{*$FullName}?action=myaction| do my action]]%0a=]%0a%0aHowever, if you want to use [[Functions|PmWiki's built-in functions]] for custom actions you have to be aware of the fact that cookbook recipes are included in [@config.php@], which is executed early during PmWiki page processing. That means that many variables of these internal functions (e.g. in [@pmwiki.php@]) are not yet properly initialized. Thus, these functions can behave unexpectedly when called directly in the recipe's include file. Remember that functions used for custom mark-up, too, are only called later in the process - %25hlt php%25[@Markup()@] takes care of this. Analogously, you can use an ''action handler'' to make PmWiki execute your action code at the right time, when all the internal workings are set.%0a%0aThe following example shows how to set up a custom action [@myaction@] for URL ...[@/MyGroup/MyPage?action=myaction@]. The following nonsensical but instructive example will prepend an "x" to the mark-up of ''another'' page [@MyGroup.MyOtherPage@]. Then it will display the page [@MyGroup.MyPage@] that is stated in the URL.%0a%0a>>frame font-size=smaller%3c%3c%25hlt php%25[@%0a$HandleActions['myaction'] = 'HandleMyAction';  # if url contains action=myaction call HandleMyAction timely%0a$HandleAuth['myaction'] = 'admin';              # authorization level $auth for HandleMyAction%0a%0afunction HandleMyAction($pagename, $auth) {     # parameters (signature) of handler function required by PmWiki%0a  global $Author;                               # get hold of current author name, e.g. for page history%0a  $old = RetrieveAuthPage('MyGroup.MyOtherPage', $auth);   # get all information from page MyGroup.MyOtherPage%0a  $new = $old;                                  # copy the page information to stay (e.g. page history)%0a  $new['text'] = "x".$old['text'];              # ... some manipulation of the old wiki mark-up%0a  $Author='myactionbot';                        # author name to appear in the page history for this manipulation %0a  $pn='MyGroup.MyOtherPage';                    # need to call UpdatePage with variables (by reference) only%0a  UpdatePage($pn,$old,$new);                    # alter the actual wiki page%0a  HandleBrowse($pagename);                      # display the page specified in the url (e.g. MyGroup.MyPage)%0a}%0a@]%0a>>%3c%3c%0a%0aNotes:%0a* With 'admin' as authorization level, the action will prompt for an admin password unless it is already present in a cookie from an earlier login. With 'read', [@RetrieveAuthPage()@] could only access pages that the current user may read.%0a* For some reason, %25hlt php%25[@UpdatePage()@] needs to be called with variables (by reference), thus [@UpdatePage('MyGroup.MyOtherPage',$old,$new),@] would yield a PHP error.%0a* Since this action here is affecting unrelated pages ([@MyOtherPage@]), one would rather exit the script after %25hlt php%25[@UpdatePage()@], maybe after having printed some raw status message, instead of displaying a wiki page with [@HandleBrowse()@].%0a* If an UpdatePage action includes form field processing, clean up the input before using it to build @@$new['text']@@. For example: %25hlt php%25[@$new['text'] = str_replace("\r",'',stripmagic($_POST['text']));@].%0a*List of [[Available Actions]] (Default actions ; Enable diag actions ; Script actions ; Cookbook actions)%0a%0aCategory: [[!PmWiki Developer]]%0a
time=1660940734
title=Custom Actions
